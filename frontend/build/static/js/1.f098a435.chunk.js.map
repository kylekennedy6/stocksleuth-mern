{"version":3,"sources":["dialogue/components/AnswerItem.js","dialogue/components/AnswerList.js","dialogue/components/QuestionItem.js","ratings/components/NewExchangeRating.js","ratings/components/UpdateExchangeRating.js","dialogue/components/ExchangeItem.js","dialogue/components/ExchangeList.js","ratings/components/NewTranscriptRating.js","ratings/components/UpdateTranscriptRating.js","ratings/components/TranscriptRatingForm.js","transcripts/components/TranscriptTitle.js","transcripts/components/TranscriptHeader.js","transcripts/components/TranscriptNavLinks.js","transcripts/components/TranscriptDropdown.js","transcripts/components/TranscriptNavigation.js","transcripts/components/TranscriptHome.js"],"names":["AnswerItem","props","Fragment","className","executive","answer","AnswerList","items","length","Card","map","key","QuestionItem","analyst","questionText","NewExchangeRating","auth","useContext","AuthContext","transcriptId","useParams","useHttpClient","isLoading","error","sendRequest","clearError","useState","contextRating","setContextRating","questionRating","setQuestionRating","overallRating","setOverallRating","primaryEvidence","setPrimaryEvidence","contraryEvidence","setContraryEvidence","history","useHistory","ratingSubmitHandler","event","a","preventDefault","process","JSON","stringify","id","userId","Authorization","token","push","username","ErrorModal","onClear","onSubmit","LoadingSpinner","as","Overlay","value","onChange","target","name","type","checked","Button","UpdateExchangeRating","_id","ExchangeItem","number","programmaticRating","answers","exchangeRating","ExchangeList","exchange","userExchangeRating","NewTranscriptRating","rating","setRating","currentPage","window","location","href","split","UpdateTranscriptRating","TranscriptRatingForm","loadedTranscriptRating","setLoadedTranscriptRating","useEffect","responseData","transcriptRating","fetchTranscriptRating","TranscriptTitle","loadedTranscript","setLoadedTranscript","transcript","fetchTranscript","ticker","tickerText","fiscalQuarter","fiscalYear","currentUrl","includes","pageName","TranscriptHeader","children","TranscriptNavLinks","to","exact","TranscriptDropdown","content","ReactDOM","createPortal","document","getElementById","TranscriptNavigation","drawerIsOpen","setDrawerIsOpen","Backdrop","onClick","TranscriptHome"],"mappings":"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","file":"static/js/1.f098a435.chunk.js","sourcesContent":["import React from 'react';\n\nimport './AnswerItem.css';\n\nconst AnswerItem = props => {\n  return (\n    <React.Fragment>\n      <div className=\"answer-item\">\n        <h4>A: {props.executive}</h4>\n        <p>{props.answer}</p>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AnswerItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport AnswerItem from './AnswerItem';\nimport './AnswerList.css';\n\nconst AnswerList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"answer-container\">\n        <Card>\n          <h2>No answers found for this exchange.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"answer-container\">\n      {props.items.map(answer => (\n        <AnswerItem \n          key={answer.executive} \n          executive={answer.executive} \n          answer={answer.answer}\n        />\n      ))}\n    </div>\n  );\n\n}\nexport default AnswerList;","import React from 'react';\n\nimport './QuestionItem.css';\n\nconst QuestionItem = props => {\n  return (\n    <React.Fragment>\n      <div className=\"question-item\">\n        <h4>Q: {props.analyst}</h4>\n        <p>{props.questionText}</p>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default QuestionItem;\n","import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst NewExchangeRating = props => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [contextRating, setContextRating] = useState('Unrated');\n  const [questionRating, setQuestionRating] = useState('Unrated');\n  const [overallRating, setOverallRating] = useState('Unrated');\n  const [primaryEvidence, setPrimaryEvidence] = useState(false);\n  const [contraryEvidence, setContraryEvidence] = useState(false);\n\n  const contextRatingChangeHandler = event => {\n    setContextRating(event.target.value);\n  };\n\n  const questionRatingChangeHandler = event => {\n    setQuestionRating(event.target.value);\n  };\n\n  const overallRatingChangeHandler = event => {\n    setOverallRating(event.target.value);\n  };\n\n  const primaryEvidenceChangeHandler = event => {\n    setPrimaryEvidence(!primaryEvidence);\n  };\n\n  const contraryEvidenceChangeHandler = event => {\n    setContraryEvidence(event.target.checked);\n  };\n\n  const history = useHistory();\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/exchangeRatings',\n        'POST', \n        JSON.stringify({\n          \"contextRating\": contextRating,\n          \"questionRating\": questionRating,\n          \"overallRating\": overallRating,\n          \"primaryEvidence\": primaryEvidence,\n          \"contraryEvidence\": contraryEvidence,\n          \"exchange\": props.id,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n      history.push('/');\n      history.push(`/users/${auth.username}/transcripts/${transcriptId}/exchanges`);\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n      <div className=\"ratings-side-by-side-container\">\n      <label>\n        Context Rating:\n        <select value={contextRating} onChange={contextRatingChangeHandler}>\n          <option value=\"Unrated\">Unrated</option>\n          <option value=\"Off-Topic\">Off-Topic</option>\n          <option value=\"Future-Looking\">Future-Looking</option>\n          <option value=\"Secondary Guidance\">Secondary Guidance</option>\n          <option value=\"Primary Guidance\">Primary Guidance</option>\n        </select>\n      </label>\n      <label>\n        Question Rating:\n        <select value={questionRating} onChange={questionRatingChangeHandler}>\n          <option value=\"Unrated\">Unrated</option>\n          <option value=\"Neutral\">Neutral</option>\n          <option value=\"Concern\">Concern</option>\n          <option value=\"Optimism\">Optimism</option>\n          <option value=\"Negative Skepticism\">Negative Skepticism</option>\n          <option value=\"Positive Skepticism\">Positive Skepticism</option>\n        </select>\n      </label>\n      <label>\n        Overall Rating:\n        <select value={overallRating} onChange={overallRatingChangeHandler}>\n          <option value=\"Unrated\">Unrated</option>\n          <option value=\"No Hypothesis\">No Hypothesis</option>\n          <option value=\"Concern About Near-Term Performance\">Concern About Near-Term Performance</option>\n          <option value=\"Optimism About Near-Term Performance\">Optimism About Near-Term Performance</option>\n          <option value=\"Possibly Aggressive Guidance\">Possibly Aggressive Guidance</option>\n          <option value=\"Possibly Conservative Guidance\">Possibly Conservative Guidance</option>\n          <option value=\"Likely Aggressive Guidance\">Likely Aggressive Guidance</option>\n          <option value=\"Likely Conservative Guidance\">Likely Conservative Guidance</option>\n          <option value=\"Likely Guidance Cut on Next Event\">Likely Guidance Cut on Next Event</option>\n          <option value=\"Likely Guidance Raise on Next Event\">Likely Guidance Raise on Next Event</option>\n        </select>\n      </label>\n      </div>\n      <div className=\"ratings-side-by-side-container\">\n      <label>\n        Primary Evidence (Y/N):\n        <input\n          name=\"primaryEvidence\"\n          type=\"checkbox\"\n          onChange={primaryEvidenceChangeHandler}\n          checked={primaryEvidence} />\n      </label>\n      <label>\n        Contrary Evidence (Y/N)?:\n        <input\n          name=\"contraryEvidence\"\n          type=\"checkbox\"\n          onChange={contraryEvidenceChangeHandler}\n          checked={contraryEvidence} />\n      </label>\n      <div className=\"rating-form__button\">\n        <Button type=\"submit\">\n            Update Ratings\n        </Button>\n      </div>\n      </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewExchangeRating;","import React, { useContext, useState } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst UpdateExchangeRating = props => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [contextRating, setContextRating] = useState(props.contextRating);\n  const [questionRating, setQuestionRating] = useState(props.questionRating);\n  const [overallRating, setOverallRating] = useState(props.overallRating);\n  const [primaryEvidence, setPrimaryEvidence] = useState(props.primaryEvidence);\n  const [contraryEvidence, setContraryEvidence] = useState(props.contraryEvidence);\n\n  const contextRatingChangeHandler = event => {\n    setContextRating(event.target.value);\n  };\n\n  const questionRatingChangeHandler = event => {\n    setQuestionRating(event.target.value);\n  };\n\n  const overallRatingChangeHandler = event => {\n    setOverallRating(event.target.value);\n  };\n\n  const primaryEvidenceChangeHandler = event => {\n    setPrimaryEvidence(event.target.checked);\n  };\n\n  const contraryEvidenceChangeHandler = event => {\n    setContraryEvidence(event.target.checked);\n  };\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/exchangeRatings/${props._id}`,\n        'PATCH',\n        JSON.stringify({\n          \"contextRating\": contextRating,\n          \"questionRating\": questionRating,\n          \"overallRating\": overallRating,\n          \"primaryEvidence\": primaryEvidence,\n          \"contraryEvidence\": contraryEvidence,\n          \"exchangeRatingId\": props._id,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form rating-form-title\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n      <div className=\"ratings-side-by-side-container\">\n      <label>\n        Context Rating:\n        <select value={contextRating} onChange={contextRatingChangeHandler}>\n          <option value=\"Unrated\">Unrated</option>\n          <option value=\"Off-Topic\">Off-Topic</option>\n          <option value=\"Future-Looking\">Future-Looking</option>\n          <option value=\"Secondary Guidance\">Secondary Guidance</option>\n          <option value=\"Primary Guidance\">Primary Guidance</option>\n        </select>\n      </label>\n      <label>\n        Question Rating:\n        <select value={questionRating} onChange={questionRatingChangeHandler}>\n          <option value=\"Unrated\">Unrated</option>\n          <option value=\"Neutral\">Neutral</option>\n          <option value=\"Concern\">Concern</option>\n          <option value=\"Optimism\">Optimism</option>\n          <option value=\"Negative Skepticism\">Negative Skepticism</option>\n          <option value=\"Positive Skepticism\">Positive Skepticism</option>\n        </select>\n      </label>\n      <label>\n        Overall Rating:\n        <select value={overallRating} onChange={overallRatingChangeHandler}>\n          <option value=\"Unrated\">Unrated</option>\n          <option value=\"No Hypothesis\">No Hypothesis</option>\n          <option value=\"Concern About Near-Term Performance\">Concern About Near-Term Performance</option>\n          <option value=\"Optimism About Near-Term Performance\">Optimism About Near-Term Performance</option>\n          <option value=\"Possibly Aggressive Guidance\">Possibly Aggressive Guidance</option>\n          <option value=\"Possibly Conservative Guidance\">Possibly Conservative Guidance</option>\n          <option value=\"Likely Aggressive Guidance\">Likely Aggressive Guidance</option>\n          <option value=\"Likely Conservative Guidance\">Likely Conservative Guidance</option>\n          <option value=\"Likely Guidance Cut on Next Event\">Likely Guidance Cut on Next Event</option>\n          <option value=\"Likely Guidance Raise on Next Event\">Likely Guidance Raise on Next Event</option>\n        </select>\n      </label>\n      </div>\n      <div className=\"ratings-side-by-side-container\">\n      <label>\n        Primary Evidence (Y/N):\n        <input\n          name=\"primaryEvidence\"\n          type=\"checkbox\"\n          onChange={primaryEvidenceChangeHandler}\n          checked={primaryEvidence} />\n      </label>\n      <label>\n        Contrary Evidence (Y/N)?:\n        <input\n          name=\"contraryEvidence\"\n          type=\"checkbox\"\n          onChange={contraryEvidenceChangeHandler}\n          checked={contraryEvidence} />\n      </label>\n      <div className=\"rating-form__button\">\n        <Button type=\"submit\">\n            Update Ratings\n        </Button>\n      </div>\n      </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateExchangeRating;\n","import React from 'react';\n\nimport AnswerList from './AnswerList';\nimport Card from '../../shared/components/UIElements/Card';\nimport './ExchangeItem.css';\nimport QuestionItem from './QuestionItem';\nimport NewExchangeRating from '../../ratings/components/NewExchangeRating';\nimport UpdateExchangeRating from '../../ratings/components/UpdateExchangeRating';\n\nconst ExchangeItem = props => {\n\n  return (\n    <React.Fragment>\n      <li className=\"exchange-item\">\n        <Card className=\"exchange-item__content\">\n            <h3>QA{props.number} (Programmatic Rating: {props.programmaticRating})</h3>\n            <QuestionItem {...props} />\n            <AnswerList items={props.answers} />\n            {!props.exchangeRating &&\n            <NewExchangeRating {...props} />}\n            {props.exchangeRating &&\n            <UpdateExchangeRating {...props.exchangeRating} />}\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default ExchangeItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport ExchangeItem from './ExchangeItem';\nimport './ExchangeList.css';\n\nconst ExchangeList = props => {\n  if (props.items.length === 0) {\n    return (\n        <Card className=\"empty-list-card\">\n          <h2>No exchanges found.</h2>\n        </Card>\n    );\n  }\n\n  return (\n    <ul className=\"exchange-list\">\n      {props.items.map(exchange => (\n        <ExchangeItem\n          key={exchange.id} \n          id={exchange.id} \n          number={exchange.number}\n          analyst={exchange.analyst}\n          questionText={exchange.questionText}\n          answers={exchange.answers}\n          exchangeRating={exchange.userExchangeRating}\n          programmaticRating={exchange.programmaticRating}\n        />\n      ))}\n    </ul>\n  );\n\n}\nexport default ExchangeList;","import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst NewTranscriptRating = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState('Unrated');\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const currentPage = window.location.href.split(3000)[1]\n  const history = useHistory();\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/transcriptRatings',\n        'POST', \n        JSON.stringify({\n          \"rating\": rating,\n          \"transcript\": transcriptId,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n      history.push('/');\n      history.push(currentPage);\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <label className=\"transcript-rating__label\">\n            Transcript Rating:\n            <select value={rating} onChange={ratingChangeHandler}>\n              <option value=\"Unrated\">Unrated</option>\n              <option value=\"Empty\">Empty</option>\n              <option value=\"Weak\">Weak</option>\n              <option value=\"(Pre-Report): Short - Tier Two\">(Pre-Report): Short - Tier Two</option>\n              <option value=\"(Pre-Report): Long - Tier Two\">(Pre-Report): Long - Tier Two</option>\n              <option value=\"(Pre-Report): Short - Tier One\">(Pre-Report): Short - Tier One</option>\n              <option value=\"(Pre-Report): Long - Tier One\">(Pre-Report): Long - Tier One</option>\n              <option value=\"(Post-Report): Short - Success\">(Post-Report): Short - Success</option>\n              <option value=\"(Post-Report): Long - Success\">(Post-Report): Long - Success</option>\n              <option value=\"(Post-Report): Short - Misinterpreted\">(Post-Report): Short - Misinterpreted Evidence</option>\n              <option value=\"(Post-Report): Long - Misinterpreted\">(Post-Report): Long - Misinterpreted Evidence</option>\n              <option value=\"(Post-Report): Short - Adverse Reaction\">(Post-Report): Short - Adverse Reaction</option>\n              <option value=\"(Post-Report): Long - Adverse Reaction\">(Post-Report): Long - Adverse Reaction</option>\n            </select>\n          </label>\n        </div>\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <div className=\"transcript-rating-form__button\">\n            <Button type=\"submit\">\n                Update Transcript Rating\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewTranscriptRating;","import React, { useContext, useState } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst UpdateTranscriptRating = props => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState(props.rating);\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/transcriptRatings/${props._id}`,\n        'PATCH', \n        JSON.stringify({\n          \"rating\": rating,\n          \"transcriptRatingId\": props._id,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n        <div className=\"transcript-ratings-side-by-side-container\">\n        <label className=\"transcript-rating__label\">\n          Transcript Rating:\n          <select value={rating} onChange={ratingChangeHandler}>\n            <option value=\"Unrated\">Unrated</option>\n            <option value=\"Empty\">Empty</option>\n            <option value=\"Weak\">Weak</option>\n            <option value=\"(Pre-Report): Short - Tier Two\">(Pre-Report): Short - Tier Two</option>\n            <option value=\"(Pre-Report): Long - Tier Two\">(Pre-Report): Long - Tier Two</option>\n            <option value=\"(Pre-Report): Short - Tier One\">(Pre-Report): Short - Tier One</option>\n            <option value=\"(Pre-Report): Long - Tier One\">(Pre-Report): Long - Tier One</option>\n            <option value=\"(Post-Report): Short - Success\">(Post-Report): Short - Success</option>\n            <option value=\"(Post-Report): Long - Success\">(Post-Report): Long - Success</option>\n            <option value=\"(Post-Report): Short - Misinterpreted\">(Post-Report): Short - Misinterpreted</option>\n            <option value=\"(Post-Report): Long - Misinterpreted\">(Post-Report): Long - Misinterpreted</option>\n            <option value=\"(Post-Report): Short - Adverse Reaction\">(Post-Report): Short - Adverse Reaction</option>\n            <option value=\"(Post-Report): Long - Adverse Reaction\">(Post-Report): Long - Adverse Reaction</option>\n          </select>\n        </label>\n        </div>\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <div className=\"transcript-rating-form__button\">\n            <Button type=\"submit\">\n                Update Transcript Rating\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateTranscriptRating;","import React, { useState, useEffect, useContext} from 'react';\nimport { useParams } from 'react-router-dom'\n\nimport NewTranscriptRating from './NewTranscriptRating';\nimport UpdateTranscriptRating from './UpdateTranscriptRating';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport './RatingForm.css';\n\nconst TranscriptRatingForm = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const [ loadedTranscriptRating, setLoadedTranscriptRating ] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  useEffect(() => {\n    const fetchTranscriptRating = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcriptRatings/${auth.username}/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscriptRating(responseData.transcriptRating);\n      } catch (err) {}\n    };\n    fetchTranscriptRating();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    {isLoading && (<div className=\"center\">\n      <LoadingSpinner />\n    </div>\n    )}\n    <header className=\"rating-header\">\n    {!isLoading && loadedTranscriptRating && !loadedTranscriptRating._id && (\n    <NewTranscriptRating />)}\n    {!isLoading && loadedTranscriptRating && loadedTranscriptRating._id && (\n    <UpdateTranscriptRating {...loadedTranscriptRating} />)}\n    </header>\n  </React.Fragment>\n  );\n}\n\nexport default TranscriptRatingForm;","import React, { useContext, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './TranscriptTitle.css';\nimport TranscriptRatingForm from '../../ratings/components/TranscriptRatingForm';\n\nconst TranscriptTitle = () => {\n  const auth = useContext(AuthContext);\n  const [ loadedTranscript, setLoadedTranscript] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const transcriptId = useParams().transcriptId;\n  const pageName = () => {\n    const currentUrl = window.location.href;\n    if (currentUrl.includes('exchanges')) {\n      return 'Highly-Rated QA'\n    } else if (currentUrl.includes('opening-statements')) {\n      return 'Highly-Rated OS'\n    } else if (currentUrl.includes('full-transcript')) {\n      return 'Full Transcript'\n    } else if (currentUrl.includes('primary-evidence')) {\n      return 'Upcoming Trades'\n    } else if (currentUrl.includes('guidance-versus-consensus')) {\n      return 'Guidance vs. Consensus'\n    } else if (currentUrl.includes('past-events')) {\n      return 'Past Events'\n    } else if (currentUrl.includes('tendencies')) {\n      return 'Tendencies'\n    } else if (currentUrl.includes('sentiment')) {\n      return 'Sentiment'\n    } else if (currentUrl.includes('trade-submission')) {\n      return 'Trade Submission'\n    } else if (currentUrl.includes('reaction-evaluation')) {\n      return 'Reaction Evaluation'\n    }\n  }\n\n  useEffect(() => {\n    const fetchTranscript = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcripts/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscript(responseData.transcript);\n      } catch (err) {}\n    };\n    fetchTranscript();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (<div className=\"center\">\n        <LoadingSpinner />\n      </div>\n      )}\n      {!isLoading && loadedTranscript && (\n        <header className=\"transcript-title\">\n          <h2>{loadedTranscript.ticker.tickerText} {loadedTranscript.fiscalQuarter} {loadedTranscript.fiscalYear}: {pageName()}</h2>\n        </header>)}\n        <TranscriptRatingForm />\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptTitle;","import React from 'react';\n\nimport './TranscriptHeader.css';\n\nconst TranscriptHeader = props => {\n  return (\n    <header className=\"transcript-header\">\n      {props.children}\n    </header>\n  );\n};\n\nexport default TranscriptHeader","import React, { useContext } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './TranscriptNavLinks.css';\n\nconst TranscriptNavLinks = props => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  return (\n    <ul className=\"transcript-nav-links\">\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/exchanges`} exact>QA</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/opening-statements`} exact>OS</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/full-transcript`} exact>Full Transcript</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/guidance-versus-consensus`} exact>Guidance vs. Consensus</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/past-events`}  exact>Past Events</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/tendencies`}  exact>Tendencies</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/sentiment`}  exact>Sentiment</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/trade-submission`}  exact>Trade Submission</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/reaction-evaluation`}  exact>Reaction Evaluation</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default TranscriptNavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './TranscriptDropdown.css';\n\nconst TranscriptDropdown = props => {\n  const content = (\n    <aside className=\"transcript-dropdown\">{props.children}</aside>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('dropdown-hook'));\n};\n\nexport default TranscriptDropdown;","import React, { useState } from 'react';\n\nimport TranscriptHeader from './TranscriptHeader';\nimport TranscriptNavLinks from './TranscriptNavLinks';\nimport TranscriptDropdown from './TranscriptDropdown';\nimport Backdrop from '../../shared/components/UIElements/Backdrop';\nimport './TranscriptNavigation.css';\n\nconst TranscriptNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  \n  const openDrawer = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawer = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawer} />}\n      {drawerIsOpen &&\n      <TranscriptDropdown>\n        <nav className=\"transcript-navigation__drawer-nav\">\n          <TranscriptNavLinks />\n        </nav>\n      </TranscriptDropdown>}\n      <TranscriptHeader>\n        <button className=\"transcript-navigation__menu-btn\" onClick={openDrawer}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <nav className=\"transcript-navigation__header-nav\">\n          <TranscriptNavLinks />\n        </nav>\n      </TranscriptHeader>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptNavigation;","import React from 'react';\n\nimport TranscriptTitle from './TranscriptTitle';\nimport TranscriptNavigation from './TranscriptNavigation';\nimport './TranscriptHome.css';\n\nconst TranscriptHome = () => {\n\n  return (\n    <React.Fragment>\n      <div className=\"transcript-home-title-container\">\n        <TranscriptTitle />\n        <TranscriptNavigation />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptHome;"],"sourceRoot":""}