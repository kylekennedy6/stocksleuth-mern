{"version":3,"sources":["ratings/components/NewOpeningStatementRating.js","ratings/components/UpdateOpeningStatementRating.js","dialogue/components/OpeningStatementItem.js","dialogue/components/OpeningStatementList.js","transcripts/pages/TranscriptHomeOpeningStatements.js","ratings/components/NewTranscriptRating.js","ratings/components/UpdateTranscriptRating.js","ratings/components/TranscriptRatingForm.js","transcripts/components/TranscriptTitle.js","transcripts/components/TranscriptHeader.js","transcripts/components/TranscriptNavLinks.js","transcripts/components/TranscriptDropdown.js","transcripts/components/TranscriptNavigation.js","transcripts/components/TranscriptHome.js"],"names":["NewOpeningStatementRating","props","auth","useContext","AuthContext","transcriptId","useParams","useHttpClient","isLoading","error","sendRequest","clearError","useState","rating","setRating","primaryEvidence","setPrimaryEvidence","contraryEvidence","setContraryEvidence","history","useHistory","ratingSubmitHandler","event","a","preventDefault","process","JSON","stringify","id","userId","Authorization","token","push","username","Fragment","ErrorModal","onClear","className","onSubmit","LoadingSpinner","as","Overlay","value","onChange","target","name","type","checked","Button","UpdateOpeningStatementRating","_id","OpeningStatementItem","Card","number","programmaticRating","executive","text","openingStatementRating","OpeningStatementList","items","length","map","openingStatement","key","userOpeningStatementRating","TranscriptHomeOpeningStatements","loadedOpeningStatements","setLoadedOpeningStatements","useEffect","responseData","openingStatementsWithUserOpeningStatementRatings","fetchOpeningStatements","NewTranscriptRating","currentPage","window","location","href","split","UpdateTranscriptRating","TranscriptRatingForm","loadedTranscriptRating","setLoadedTranscriptRating","transcriptRating","fetchTranscriptRating","TranscriptTitle","loadedTranscript","setLoadedTranscript","transcript","fetchTranscript","ticker","tickerText","fiscalQuarter","fiscalYear","currentUrl","includes","pageName","TranscriptHeader","children","TranscriptNavLinks","to","exact","TranscriptDropdown","content","ReactDOM","createPortal","document","getElementById","TranscriptNavigation","drawerIsOpen","setDrawerIsOpen","Backdrop","onClick","TranscriptHome"],"mappings":"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","file":"static/js/8.2fc82a62.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst NewOpeningStatementRating = props => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState('Unrated');\n  const [primaryEvidence, setPrimaryEvidence] = useState(false);\n  const [contraryEvidence, setContraryEvidence] = useState(false);\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const primaryEvidenceChangeHandler = event => {\n    setPrimaryEvidence(!primaryEvidence);\n  };\n\n  const contraryEvidenceChangeHandler = event => {\n    setContraryEvidence(event.target.checked);\n  };\n\n  const history = useHistory();\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/openingStatementRatings',\n        'POST', \n        JSON.stringify({\n          \"rating\": rating,\n          \"primaryEvidence\": primaryEvidence,\n          \"contraryEvidence\": contraryEvidence,\n          \"openingStatement\": props.id,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n      history.push('/');\n      history.push(`/users/${auth.username}/transcripts/${transcriptId}/opening-statements`);\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n      <div className=\"ratings-side-by-side-container\">\n      <label>\n        Rating:\n        <select value={rating} onChange={ratingChangeHandler}>\n          <option value=\"Unrated\">Unrated</option>\n          <option value=\"Off-Topic\">Off-Topic</option>\n          <option value=\"Results\">Results</option>\n          <option value=\"Guidance\">Guidance</option>\n          <option value=\"Magnitudinal Guidance\">Magnitudinal Guidance</option>\n          <option value=\"Downside Guidance\">Downside Guidance</option>\n          <option value=\"Upside Guidance\">Upside Guidance</option>\n        </select>\n      </label>\n      <label>\n        Primary Evidence (Y/N):\n        <input\n          name=\"primaryEvidence\"\n          type=\"checkbox\"\n          onChange={primaryEvidenceChangeHandler}\n          checked={primaryEvidence} />\n      </label>\n      <label>\n        Contrary Evidence (Y/N)?:\n        <input\n          name=\"contraryEvidence\"\n          type=\"checkbox\"\n          onChange={contraryEvidenceChangeHandler}\n          checked={contraryEvidence} />\n      </label>\n      <div className=\"rating-form__button\">\n        <Button type=\"submit\">\n            Update Ratings\n        </Button>\n      </div>\n      </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewOpeningStatementRating;","import React, { useContext, useState } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst UpdateOpeningStatementRating = props => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState(props.rating);\n  const [primaryEvidence, setPrimaryEvidence] = useState(props.primaryEvidence);\n  const [contraryEvidence, setContraryEvidence] = useState(props.contraryEvidence);\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const primaryEvidenceChangeHandler = event => {\n    setPrimaryEvidence(!primaryEvidence);\n  };\n\n  const contraryEvidenceChangeHandler = event => {\n    setContraryEvidence(event.target.checked);\n  };\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/openingStatementRatings/${props._id}`,\n        'PATCH', \n        JSON.stringify({\n          \"rating\": rating,\n          \"primaryEvidence\": primaryEvidence,\n          \"contraryEvidence\": contraryEvidence,\n          \"openingStatementRatingId\": props._id,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n      <div className=\"ratings-side-by-side-container\">\n      <label>\n        Rating:\n        <select value={rating} onChange={ratingChangeHandler}>\n          <option value=\"Unrated\">Unrated</option>\n          <option value=\"Off-Topic\">Off-Topic</option>\n          <option value=\"Results\">Results</option>\n          <option value=\"Guidance\">Guidance</option>\n          <option value=\"Magnitudinal Guidance\">Magnitudinal Guidance</option>\n          <option value=\"Downside Guidance\">Downside Guidance</option>\n          <option value=\"Upside Guidance\">Upside Guidance</option>\n        </select>\n      </label>\n      </div>\n      <div className=\"ratings-side-by-side-container\">\n      <label>\n        Primary Evidence (Y/N):\n        <input\n          name=\"primaryEvidence\"\n          type=\"checkbox\"\n          onChange={primaryEvidenceChangeHandler}\n          checked={primaryEvidence} />\n      </label>\n      <label>\n        Contrary Evidence (Y/N)?:\n        <input\n          name=\"contraryEvidence\"\n          type=\"checkbox\"\n          onChange={contraryEvidenceChangeHandler}\n          checked={contraryEvidence} />\n      </label>\n      <div className=\"rating-form__button\">\n        <Button type=\"submit\">\n            Update Ratings\n        </Button>\n      </div>\n      </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateOpeningStatementRating;","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport NewOpeningStatementRating from '../../ratings/components/NewOpeningStatementRating';\nimport './OpeningStatementItem.css';\nimport UpdateOpeningStatementRating from '../../ratings/components/UpdateOpeningStatementRating';\n\nconst OpeningStatementItem = props => {\n\n  return (\n    <React.Fragment>\n      <li className=\"openingStatement-item\">\n        <Card className=\"openingStatement-item__content\">\n          <h3>OS{props.number} (Programmatic Rating: {props.programmaticRating})</h3>\n          <h5>{props.executive}</h5>\n          <p>{props.text}</p>\n          {!props.openingStatementRating &&\n          <NewOpeningStatementRating {...props} />}\n          {props.openingStatementRating &&\n          <UpdateOpeningStatementRating {...props.openingStatementRating} />}\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default OpeningStatementItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport OpeningStatementItem from './OpeningStatementItem';\nimport './OpeningStatementList.css';\n\nconst OpeningStatementList = props => {\n  if (props.items.length === 0) {\n    return (\n        <Card className=\"empty-list-card\">\n          <h2>No opening statements found.</h2>\n        </Card>\n    );\n  }\n\n  return (\n    <ul className=\"openingStatement-list\">\n      {props.items.map(openingStatement => (\n        <OpeningStatementItem \n          key={openingStatement._id} \n          id={openingStatement._id} \n          number={openingStatement.number}\n          executive={openingStatement.executive}\n          text={openingStatement.text}\n          openingStatementRating={openingStatement.userOpeningStatementRating}\n          programmaticRating={openingStatement.programmaticRating}\n        />\n      ))}\n    </ul>\n  );\n\n}\nexport default OpeningStatementList;","import React, {useEffect, useState, useContext } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport TranscriptHome from '../components/TranscriptHome';\nimport OpeningStatementList from '../../dialogue/components/OpeningStatementList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nconst TranscriptHomeOpeningStatements = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId\n  const [ loadedOpeningStatements, setLoadedOpeningStatements ] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  useEffect(() => {\n    const fetchOpeningStatements = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/openingStatements/${auth.username}/${transcriptId}/highlyRated`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedOpeningStatements(responseData.openingStatementsWithUserOpeningStatementRatings);\n      } catch (err) {}\n    };\n    fetchOpeningStatements();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n      <div className=\"main-container\">\n        <TranscriptHome />\n          <div className=\"content-container\">\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (<div className=\"center\">\n            <LoadingSpinner />\n          </div>\n          )}\n          {!isLoading && loadedOpeningStatements && <OpeningStatementList items={loadedOpeningStatements} />}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptHomeOpeningStatements;","import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst NewTranscriptRating = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState('Unrated');\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const currentPage = window.location.href.split(3000)[1]\n  const history = useHistory();\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/transcriptRatings',\n        'POST', \n        JSON.stringify({\n          \"rating\": rating,\n          \"transcript\": transcriptId,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n      history.push('/');\n      history.push(currentPage);\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <label className=\"transcript-rating__label\">\n            Transcript Rating:\n            <select value={rating} onChange={ratingChangeHandler}>\n              <option value=\"Unrated\">Unrated</option>\n              <option value=\"Empty\">Empty</option>\n              <option value=\"Weak\">Weak</option>\n              <option value=\"(Pre-Report): Short - Tier Two\">(Pre-Report): Short - Tier Two</option>\n              <option value=\"(Pre-Report): Long - Tier Two\">(Pre-Report): Long - Tier Two</option>\n              <option value=\"(Pre-Report): Short - Tier One\">(Pre-Report): Short - Tier One</option>\n              <option value=\"(Pre-Report): Long - Tier One\">(Pre-Report): Long - Tier One</option>\n              <option value=\"(Post-Report): Short - Success\">(Post-Report): Short - Success</option>\n              <option value=\"(Post-Report): Long - Success\">(Post-Report): Long - Success</option>\n              <option value=\"(Post-Report): Short - Misinterpreted\">(Post-Report): Short - Misinterpreted Evidence</option>\n              <option value=\"(Post-Report): Long - Misinterpreted\">(Post-Report): Long - Misinterpreted Evidence</option>\n              <option value=\"(Post-Report): Short - Adverse Reaction\">(Post-Report): Short - Adverse Reaction</option>\n              <option value=\"(Post-Report): Long - Adverse Reaction\">(Post-Report): Long - Adverse Reaction</option>\n            </select>\n          </label>\n        </div>\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <div className=\"transcript-rating-form__button\">\n            <Button type=\"submit\">\n                Update Transcript Rating\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewTranscriptRating;","import React, { useContext, useState } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst UpdateTranscriptRating = props => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState(props.rating);\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/transcriptRatings/${props._id}`,\n        'PATCH', \n        JSON.stringify({\n          \"rating\": rating,\n          \"transcriptRatingId\": props._id,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n        <div className=\"transcript-ratings-side-by-side-container\">\n        <label className=\"transcript-rating__label\">\n          Transcript Rating:\n          <select value={rating} onChange={ratingChangeHandler}>\n            <option value=\"Unrated\">Unrated</option>\n            <option value=\"Empty\">Empty</option>\n            <option value=\"Weak\">Weak</option>\n            <option value=\"(Pre-Report): Short - Tier Two\">(Pre-Report): Short - Tier Two</option>\n            <option value=\"(Pre-Report): Long - Tier Two\">(Pre-Report): Long - Tier Two</option>\n            <option value=\"(Pre-Report): Short - Tier One\">(Pre-Report): Short - Tier One</option>\n            <option value=\"(Pre-Report): Long - Tier One\">(Pre-Report): Long - Tier One</option>\n            <option value=\"(Post-Report): Short - Success\">(Post-Report): Short - Success</option>\n            <option value=\"(Post-Report): Long - Success\">(Post-Report): Long - Success</option>\n            <option value=\"(Post-Report): Short - Misinterpreted\">(Post-Report): Short - Misinterpreted</option>\n            <option value=\"(Post-Report): Long - Misinterpreted\">(Post-Report): Long - Misinterpreted</option>\n            <option value=\"(Post-Report): Short - Adverse Reaction\">(Post-Report): Short - Adverse Reaction</option>\n            <option value=\"(Post-Report): Long - Adverse Reaction\">(Post-Report): Long - Adverse Reaction</option>\n          </select>\n        </label>\n        </div>\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <div className=\"transcript-rating-form__button\">\n            <Button type=\"submit\">\n                Update Transcript Rating\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateTranscriptRating;","import React, { useState, useEffect, useContext} from 'react';\nimport { useParams } from 'react-router-dom'\n\nimport NewTranscriptRating from './NewTranscriptRating';\nimport UpdateTranscriptRating from './UpdateTranscriptRating';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport './RatingForm.css';\n\nconst TranscriptRatingForm = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const [ loadedTranscriptRating, setLoadedTranscriptRating ] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  useEffect(() => {\n    const fetchTranscriptRating = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcriptRatings/${auth.username}/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscriptRating(responseData.transcriptRating);\n      } catch (err) {}\n    };\n    fetchTranscriptRating();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    {isLoading && (<div className=\"center\">\n      <LoadingSpinner />\n    </div>\n    )}\n    <header className=\"rating-header\">\n    {!isLoading && loadedTranscriptRating && !loadedTranscriptRating._id && (\n    <NewTranscriptRating />)}\n    {!isLoading && loadedTranscriptRating && loadedTranscriptRating._id && (\n    <UpdateTranscriptRating {...loadedTranscriptRating} />)}\n    </header>\n  </React.Fragment>\n  );\n}\n\nexport default TranscriptRatingForm;","import React, { useContext, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './TranscriptTitle.css';\nimport TranscriptRatingForm from '../../ratings/components/TranscriptRatingForm';\n\nconst TranscriptTitle = () => {\n  const auth = useContext(AuthContext);\n  const [ loadedTranscript, setLoadedTranscript] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const transcriptId = useParams().transcriptId;\n  const pageName = () => {\n    const currentUrl = window.location.href;\n    if (currentUrl.includes('exchanges')) {\n      return 'Highly-Rated QA'\n    } else if (currentUrl.includes('opening-statements')) {\n      return 'Highly-Rated OS'\n    } else if (currentUrl.includes('full-transcript')) {\n      return 'Full Transcript'\n    } else if (currentUrl.includes('primary-evidence')) {\n      return 'Upcoming Trades'\n    } else if (currentUrl.includes('guidance-versus-consensus')) {\n      return 'Guidance vs. Consensus'\n    } else if (currentUrl.includes('past-events')) {\n      return 'Past Events'\n    } else if (currentUrl.includes('tendencies')) {\n      return 'Tendencies'\n    } else if (currentUrl.includes('sentiment')) {\n      return 'Sentiment'\n    } else if (currentUrl.includes('trade-submission')) {\n      return 'Trade Submission'\n    } else if (currentUrl.includes('reaction-evaluation')) {\n      return 'Reaction Evaluation'\n    }\n  }\n\n  useEffect(() => {\n    const fetchTranscript = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcripts/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscript(responseData.transcript);\n      } catch (err) {}\n    };\n    fetchTranscript();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (<div className=\"center\">\n        <LoadingSpinner />\n      </div>\n      )}\n      {!isLoading && loadedTranscript && (\n        <header className=\"transcript-title\">\n          <h2>{loadedTranscript.ticker.tickerText} {loadedTranscript.fiscalQuarter} {loadedTranscript.fiscalYear}: {pageName()}</h2>\n        </header>)}\n        <TranscriptRatingForm />\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptTitle;","import React from 'react';\n\nimport './TranscriptHeader.css';\n\nconst TranscriptHeader = props => {\n  return (\n    <header className=\"transcript-header\">\n      {props.children}\n    </header>\n  );\n};\n\nexport default TranscriptHeader","import React, { useContext } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './TranscriptNavLinks.css';\n\nconst TranscriptNavLinks = props => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  return (\n    <ul className=\"transcript-nav-links\">\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/exchanges`} exact>QA</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/opening-statements`} exact>OS</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/full-transcript`} exact>Full Transcript</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/guidance-versus-consensus`} exact>Guidance vs. Consensus</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/past-events`}  exact>Past Events</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/tendencies`}  exact>Tendencies</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/sentiment`}  exact>Sentiment</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/trade-submission`}  exact>Trade Submission</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/reaction-evaluation`}  exact>Reaction Evaluation</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default TranscriptNavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './TranscriptDropdown.css';\n\nconst TranscriptDropdown = props => {\n  const content = (\n    <aside className=\"transcript-dropdown\">{props.children}</aside>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('dropdown-hook'));\n};\n\nexport default TranscriptDropdown;","import React, { useState } from 'react';\n\nimport TranscriptHeader from './TranscriptHeader';\nimport TranscriptNavLinks from './TranscriptNavLinks';\nimport TranscriptDropdown from './TranscriptDropdown';\nimport Backdrop from '../../shared/components/UIElements/Backdrop';\nimport './TranscriptNavigation.css';\n\nconst TranscriptNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  \n  const openDrawer = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawer = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawer} />}\n      {drawerIsOpen &&\n      <TranscriptDropdown>\n        <nav className=\"transcript-navigation__drawer-nav\">\n          <TranscriptNavLinks />\n        </nav>\n      </TranscriptDropdown>}\n      <TranscriptHeader>\n        <button className=\"transcript-navigation__menu-btn\" onClick={openDrawer}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <nav className=\"transcript-navigation__header-nav\">\n          <TranscriptNavLinks />\n        </nav>\n      </TranscriptHeader>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptNavigation;","import React from 'react';\n\nimport TranscriptTitle from './TranscriptTitle';\nimport TranscriptNavigation from './TranscriptNavigation';\nimport './TranscriptHome.css';\n\nconst TranscriptHome = () => {\n\n  return (\n    <React.Fragment>\n      <div className=\"transcript-home-title-container\">\n        <TranscriptTitle />\n        <TranscriptNavigation />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptHome;"],"sourceRoot":""}