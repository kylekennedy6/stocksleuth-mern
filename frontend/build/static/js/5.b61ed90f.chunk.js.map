{"version":3,"sources":["analysis/PastEvents/NewPastEvent.js","analysis/PastEvents/UpdatePastEvent.js","analysis/PastEvents/PastEventItem.js","analysis/PastEvents/PastEventList.js","transcripts/pages/TranscriptHomePastEvents.js","shared/util/formOptions.js","ratings/components/NewTranscriptRating.js","ratings/components/UpdateTranscriptRating.js","ratings/components/TranscriptRatingForm.js","transcripts/components/TranscriptTitle.js","transcripts/components/TranscriptHeader.js","transcripts/components/TranscriptNavLinks.js","transcripts/components/TranscriptDropdown.js","transcripts/components/TranscriptNavigation.js","transcripts/components/TranscriptHome.js","shared/components/DatePicker.js"],"names":["NewPastEvent","auth","useContext","AuthContext","transcriptId","useParams","useHttpClient","isLoading","error","sendRequest","clearError","useState","eventType","setEventType","fiscalQuarter","setFiscalQuarter","fiscalYear","setFiscalYear","tlChangeType","setTlChangeType","blChangeType","setBlChangeType","moment","reactionDate","setReactionDate","useForm","revenueVersusConsensus","value","isValid","epsVersusConsensus","tlMidpointChangePercentage","blMidpointChangePercentage","reaction","formState","inputHandler","history","useHistory","pastEventSubmitHandler","event","a","preventDefault","process","JSON","stringify","inputs","userId","Authorization","token","push","username","Fragment","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","onChange","target","YEAR_OPTIONS","map","year","DatePicker","date","e","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","Button","disabled","UpdatePastEvent","props","console","log","initialValue","initialValid","PastEventItem","PastEventList","items","length","Card","pastEvent","key","TranscriptHomePastEvents","loadedPastEvents","setLoadedPastEvents","useEffect","responseData","pastEvents","fetchPastEvents","TranscriptHome","FORMAT_DATE","Date","toLocaleDateString","month","day","currentYear","now","getFullYear","endYear","options","toString","BEAT_MISS_OPTIONS","beatMissOptions","i","RAISE_CUT_OPTIONS","raiseCutOptions","SA_RATING_OPTIONS","rating","SA_GRADING_OPTIONS","grade","HYPOTHESIS_OPTIONS","hypothesis","DIRECTION_OPTIONS","direction","NewTranscriptRating","setRating","currentPage","window","location","href","split","ratingSubmitHandler","as","Overlay","UpdateTranscriptRating","_id","TranscriptRatingForm","loadedTranscriptRating","setLoadedTranscriptRating","transcriptRating","fetchTranscriptRating","TranscriptTitle","loadedTranscript","setLoadedTranscript","transcript","fetchTranscript","ticker","tickerText","currentUrl","includes","pageName","TranscriptHeader","children","TranscriptNavLinks","to","exact","TranscriptDropdown","content","ReactDOM","createPortal","document","getElementById","TranscriptNavigation","drawerIsOpen","setDrawerIsOpen","Backdrop","onClick","focused","setFocused","numberOfMonths","innerWidth","onDateChange","onFocusChange","displayFormat","isDayBlocked","m","hideKeyboardShortcutsPanel","withFullScreenPortal"],"mappings":"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","file":"static/js/5.b61ed90f.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport moment from \"moment\";\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport DatePicker from '../../shared/components/DatePicker';\nimport {\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport {\n  YEAR_OPTIONS\n} from '../../shared/util/formOptions';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport '../AnalysisItem.css';\n\nconst NewPastEvent = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [eventType, setEventType] = useState('Earnings Call');\n  const [fiscalQuarter, setFiscalQuarter] = useState('Q1');\n  const [fiscalYear, setFiscalYear] = useState('2020');\n  const [tlChangeType, setTlChangeType] = useState('Initialized');\n  const [blChangeType, setBlChangeType] = useState('Initialized');\n  const [reactionDate, setReactionDate] = useState(moment);\n\n  const eventTypeChangeHandler = event => {\n    setEventType(event.target.value);\n  };\n\n  const fiscalQuarterChangeHandler = event => {\n    setFiscalQuarter(event.target.value);\n  };\n\n  const fiscalYearChangeHandler = event => {\n    setFiscalYear(event.target.value);\n  };\n\n  const tlChangeTypeChangeHandler = event => {\n    setTlChangeType(event.target.value);\n  };\n\n  const blChangeTypeChangeHandler = event => {\n    setBlChangeType(event.target.value);\n  };\n\n  const [formState, inputHandler] = useForm(\n    {\n      revenueVersusConsensus: {\n        value: 0,\n        isValid: true\n      },\n      epsVersusConsensus: {\n        value: 0,\n        isValid: true\n      },\n      tlMidpointChangePercentage: {\n        value: 0,\n        isValid: true\n      },\n      blMidpointChangePercentage: {\n        value: 0,\n        isValid: true\n      },\n      reaction: {\n        value: 0,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const pastEventSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/pastEvent',\n        'POST',\n        JSON.stringify({\n          \"eventType\": eventType,\n          \"fiscalQuarter\": fiscalQuarter,\n          \"fiscalYear\": fiscalYear,\n          \"reactionDate\": reactionDate,\n          \"revenueVersusConsensus\": formState.inputs.revenueVersusConsensus.value,\n          \"epsVersusConsensus\": formState.inputs.epsVersusConsensus.value,\n          \"tlChangeType\": tlChangeType,\n          \"tlMidpointChangePercentage\": formState.inputs.tlMidpointChangePercentage.value,\n          \"blChangeType\": blChangeType,\n          \"blMidpointChangePercentage\": formState.inputs.blMidpointChangePercentage.value,\n          \"reaction\": formState.inputs.reaction.value,\n          \"transcript\": transcriptId,\n          \"creator\": auth.userId\n        }), {\n          Authorization: 'Bearer ' + auth.token,\n          'Content-Type': 'application/json',\n        });        \n        history.push('/');\n        history.push(`/users/${auth.username}/transcripts/${transcriptId}/past-events`);\n      } catch (err) {}\n    };\n\n    return (\n      <React.Fragment>\n        <ErrorModal error={error} onClear={clearError} />\n        <form className=\"create-form\" onSubmit={pastEventSubmitHandler}>\n        <h2>New Past Event:</h2>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <div className=\"form-container\">\n          <div className=\"side-by-side-container\">\n            <h3>Event Info:</h3>\n            <label>\n            Event Type:\n            <select value={eventType} onChange={eventTypeChangeHandler}>\n              <option value=\"Earnings Call\">Earnings Call</option>\n              <option value=\"Preannounce\">Preannouncement</option>\n            </select>\n          </label>\n          <label>\n            Fiscal Quarter:\n            <select value={fiscalQuarter} onChange={fiscalQuarterChangeHandler}>\n              <option value=\"Q1\">Q1</option>\n              <option value=\"Q2\">Q2</option>\n              <option value=\"Q3\">Q3</option>\n              <option value=\"Q4\">Q4</option>\n            </select>\n          </label>\n          <label>\n            Fiscal Year:\n            <select value={fiscalYear} onChange={fiscalYearChangeHandler}>\n              {YEAR_OPTIONS().map( year =>\n                <option value={year}>{year}</option>)}\n            </select>\n          </label>\n          </div>\n          <div className=\"side-by-side-container\">\n            <h3>Reaction Info:</h3>\n            <label>\n            Reaction Date:\n            <DatePicker date={reactionDate} onChange={e => setReactionDate(e.target.value)} />\n            </label>\n            <Input\n              id=\"reaction\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Reaction (%)\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n          </div>\n          <div className=\"side-by-side-container\">\n            <h3>Top-Line Info:</h3>\n            <Input\n              id=\"revenueVersusConsensus\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Revenue vs. Consensus:\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n            <label>\n              Guidance Change Type:\n              <select value={tlChangeType} onChange={tlChangeTypeChangeHandler}>\n                <option value=\"Initialized\">Initialized</option>\n                <option value=\"Maintained\">Maintained</option>\n                <option value=\"Narrowed Down\">Narrowed Down</option>\n                <option value=\"Narrowed In-Line\">Narrowed In-Line</option>\n                <option value=\"Narrowed Up\">Narrowed Up</option>\n                <option value=\"Broadened Down\">Broadened Down</option>\n                <option value=\"Broadened In-Line\">Broadened In-Line</option>\n                <option value=\"Broadened Up\">Broadened Up</option>\n                <option value=\"Lowered Both Ends\">Lowered Both Ends</option>\n                <option value=\"Raised Both Ends\">Raised Both Ends</option>\n              </select>\n            </label>\n            <Input\n              id=\"tlMidpointChangePercentage\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Change in Guidance Midpoint (%):\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid percentage +/- (0-999).\"\n              onInput={inputHandler}\n            />\n          </div>\n          <div className=\"side-by-side-container\">\n            <h3>Bottom-Line Info:</h3>\n            <Input\n              id=\"epsVersusConsensus\"\n              element=\"input\"\n              type=\"text\"\n              label=\"EPS vs. Consensus:\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n            <label>\n              Guidance Change Type:\n              <select value={blChangeType} onChange={blChangeTypeChangeHandler}>\n                <option value=\"Initialized\">Initialized</option>\n                <option value=\"Maintained\">Maintained</option>\n                <option value=\"Narrowed Down\">Narrowed Down</option>\n                <option value=\"Narrowed In-Line\">Narrowed In-Line</option>\n                <option value=\"Narrowed Up\">Narrowed Up</option>\n                <option value=\"Broadened Down\">Broadened Down</option>\n                <option value=\"Broadened In-Line\">Broadened In-Line</option>\n                <option value=\"Broadened Up\">Broadened Up</option>\n                <option value=\"Lowered Both Ends\">Lowered Both Ends</option>\n                <option value=\"Raised Both Ends\">Raised Both Ends</option>\n              </select>\n            </label>\n            <Input\n              id=\"blMidpointChangePercentage\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Change in Guidance Midpoint (%)\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n          </div>\n        </div>\n        <div className=\"analysis-form__button\">\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            Add Event\n        </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\n\nexport default NewPastEvent;\n","import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport DatePicker from '../../shared/components/DatePicker';\nimport moment from \"moment\";\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport {\n  YEAR_OPTIONS\n} from '../../shared/util/formOptions';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport '../AnalysisForm.css';\n\nconst UpdatePastEvent = props => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  \n  console.log(props.fiscalQuarter)\n  const [eventType, setEventType] = useState(props.eventType);\n  const [fiscalQuarter, setFiscalQuarter] = useState(props.fiscalQuarter);\n  const [fiscalYear, setFiscalYear] = useState(props.fiscalYear);\n  const [tlChangeType, setTlChangeType] = useState(props.tlChangeType);\n  const [blChangeType, setBlChangeType] = useState(props.blChangeType);\n  const [reactionDate, setReactionDate] = useState(moment(props.reactionDate));\n\n  const eventTypeChangeHandler = event => {\n    setEventType(event.target.value);\n  };\n\n  const fiscalQuarterChangeHandler = event => {\n    setFiscalQuarter(event.target.value);\n  };\n\n  const fiscalYearChangeHandler = event => {\n    setFiscalYear(event.target.value);\n  };\n\n  const tlChangeTypeChangeHandler = event => {\n    setTlChangeType(event.target.value);\n  };\n\n  const blChangeTypeChangeHandler = event => {\n    setBlChangeType(event.target.value);\n  };\n\n  const [formState, inputHandler] = useForm(\n    {\n      revenueVersusConsensus: {\n        value: 0,\n        isValid: true\n      },\n      epsVersusConsensus: {\n        value: 0,\n        isValid: true\n      },\n      tlMidpointChangePercentage: {\n        value: 0,\n        isValid: true\n      },\n      blMidpointChangePercentage: {\n        value: 0,\n        isValid: true\n      },\n      reaction: {\n        value: 0,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const pastEventSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/pastEvent/${props.id}`,\n        'PATCH',\n        JSON.stringify({\n          \"eventType\": eventType,\n          \"fiscalQuarter\": fiscalQuarter,\n          \"fiscalYear\": fiscalYear,\n          \"reactionDate\": reactionDate,\n          \"revenueVersusConsensus\": formState.inputs.revenueVersusConsensus.value,\n          \"epsVersusConsensus\": formState.inputs.epsVersusConsensus.value,\n          \"tlChangeType\": tlChangeType,\n          \"tlMidpointChangePercentage\": formState.inputs.tlMidpointChangePercentage.value,\n          \"blChangeType\": blChangeType,\n          \"blMidpointChangePercentage\": formState.inputs.blMidpointChangePercentage.value,\n          \"reaction\": formState.inputs.reaction.value,\n          \"pastEventId\": props.id,\n          \"creator\": auth.userId\n        }), {\n          Authorization: 'Bearer ' + auth.token,\n          'Content-Type': 'application/json',\n        });\n        history.push('/');\n        history.push(`/users/${auth.username}/transcripts/${transcriptId}/past-events`);\n      } catch (err) {}\n    };\n\n    return (\n      <React.Fragment>\n        <ErrorModal error={error} onClear={clearError} />\n        <form className=\"create-form\" onSubmit={pastEventSubmitHandler}>\n        <h2>{props.fiscalQuarter}{props.fiscalYear} {props.eventType}:</h2>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <div className=\"form-container\">\n        <div className=\"side-by-side-container\">\n            <h3>Event Info:</h3>\n            <label>\n            Event Type:\n            <select value={eventType} onChange={eventTypeChangeHandler}>\n              <option value=\"Earnings Call\">Earnings Call</option>\n              <option value=\"Preannounce\">Preannouncement</option>\n            </select>\n          </label>\n          <label>\n            Fiscal Quarter:\n            <select value={fiscalQuarter} onChange={fiscalQuarterChangeHandler}>\n              <option value=\"Q1\">Q1</option>\n              <option value=\"Q2\">Q2</option>\n              <option value=\"Q3\">Q3</option>\n              <option value=\"Q4\">Q4</option>\n            </select>\n          </label>\n          <label>\n            Fiscal Year:\n            <select value={fiscalYear} onChange={fiscalYearChangeHandler}>\n              {YEAR_OPTIONS().map( year =>\n                <option value={year}>{year}</option>)}\n            </select>\n          </label>\n          </div>\n          <div className=\"side-by-side-container\">\n            <h3>Reaction Info:</h3>\n            <label>\n            Reaction Date:\n            <DatePicker date={reactionDate} onChange={e => setReactionDate(e.target.value)} />\n            </label>\n            <Input\n              id=\"reaction\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Reaction (%)\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n              initialValue={props.reaction}\n              initialValid={true}\n            />\n          </div>\n          <div className=\"side-by-side-container\">\n            <h3>Top-Line Info:</h3>\n            <Input\n              id=\"revenueVersusConsensus\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Revenue vs. Consensus:\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n              initialValue={props.revenueVersusConsensus}\n              initialValid={true}\n            />\n            <label>\n              Guidance Change Type:\n              <select value={tlChangeType} onChange={tlChangeTypeChangeHandler}>\n                <option value=\"Initialized\">Initialized</option>\n                <option value=\"Maintained\">Maintained</option>\n                <option value=\"Narrowed Down\">Narrowed Down</option>\n                <option value=\"Narrowed In-Line\">Narrowed In-Line</option>\n                <option value=\"Narrowed Up\">Narrowed Up</option>\n                <option value=\"Broadened Down\">Broadened Down</option>\n                <option value=\"Broadened In-Line\">Broadened In-Line</option>\n                <option value=\"Broadened Up\">Broadened Up</option>\n                <option value=\"Lowered Both Ends\">Lowered Both Ends</option>\n                <option value=\"Raised Both Ends\">Raised Both Ends</option>\n              </select>\n            </label>\n            <Input\n              id=\"tlMidpointChangePercentage\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Change in Guidance Midpoint (%):\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid percentage +/- (0-999).\"\n              onInput={inputHandler}\n              initialValue={props.tlMidpointChangePercentage}\n              initialValid={true}\n            />\n          </div>\n          <div className=\"side-by-side-container\">\n            <h3>Bottom-Line Info:</h3>\n            <Input\n              id=\"epsVersusConsensus\"\n              element=\"input\"\n              type=\"text\"\n              label=\"EPS vs. Consensus:\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n              initialValue={props.epsVersusConsensus}\n              initialValid={true}\n            />\n            <label>\n              Guidance Change Type:\n              <select value={blChangeType} onChange={blChangeTypeChangeHandler}>\n                <option value=\"Initialized\">Initialized</option>\n                <option value=\"Maintained\">Maintained</option>\n                <option value=\"Narrowed Down\">Narrowed Down</option>\n                <option value=\"Narrowed In-Line\">Narrowed In-Line</option>\n                <option value=\"Narrowed Up\">Narrowed Up</option>\n                <option value=\"Broadened Down\">Broadened Down</option>\n                <option value=\"Broadened In-Line\">Broadened In-Line</option>\n                <option value=\"Broadened Up\">Broadened Up</option>\n                <option value=\"Lowered Both Ends\">Lowered Both Ends</option>\n                <option value=\"Raised Both Ends\">Raised Both Ends</option>\n              </select>\n            </label>\n            <Input\n              id=\"blMidpointChangePercentage\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Change in Guidance Midpoint (%)\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n              initialValue={props.blMidpointChangePercentage}\n              initialValid={true}\n            />\n          </div>\n        </div>\n        <div className=\"analysis-form__button\">\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            Update\n        </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\n\nexport default UpdatePastEvent;","import React from 'react';\n\nimport '../AnalysisItem.css';\nimport UpdatePastEvent from './UpdatePastEvent';\n\nconst PastEventItem = props => {\n\n  return (\n    <React.Fragment>\n      <UpdatePastEvent {...props} />\n    </React.Fragment>\n  );\n};\n\nexport default PastEventItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport NewPastEvent from './NewPastEvent';\nimport PastEventItem from './PastEventItem';\nimport '../AnalysisList.css';\n\nconst PastEventList = props => {\n  if (props.items.length === 0) {\n    return (\n      <React.Fragment>\n        <Card className=\"smaller\">\n          <h2>No past events found. Best practice is to add an event report for each comparable next quarter event over the past three years.</h2>\n        </Card>\n      <NewPastEvent />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ul className=\"analysis-list\">\n        {props.items.map(pastEvent => (\n          <PastEventItem\n            key={pastEvent.id}\n            id={pastEvent.id}\n            eventType={pastEvent.eventType}\n            fiscalQuarter={pastEvent.fiscalQuarter}\n            fiscalYear={pastEvent.fiscalYear}\n            reactionDate={pastEvent.reactionDate}\n            revenueVersusConsensus={pastEvent.revenueVersusConsensus}\n            epsVersusConsensus={pastEvent.epsVersusConsensus}\n            tlChangeType={pastEvent.tlChangeType}\n            tlMidpointChangePercentage={pastEvent.tlMidpointChangePercentage}\n            blChangeType={pastEvent.blChangeType}\n            blMidpointChangePercentage={pastEvent.blMidpointChangePercentage}\n            reaction={pastEvent.reaction}\n          />\n        ))}\n      </ul>\n      <NewPastEvent />\n    </React.Fragment>\n  );\n};\n\nexport default PastEventList;\n","import React, {useEffect, useState, useContext } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport TranscriptHome from '../components/TranscriptHome';\nimport PastEventList from '../../analysis/PastEvents/PastEventList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nconst TranscriptHomePastEvents = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId\n  const [ loadedPastEvents, setLoadedPastEvents ] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  useEffect(() => {\n    const fetchPastEvents = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/pastEvent/${auth.username}/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedPastEvents(responseData.pastEvents);\n      } catch (err) {}\n    };\n    fetchPastEvents();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n      <div className=\"main-container\">\n        <TranscriptHome />\n        <div className=\"content-container\">\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (<div className=\"center\">\n            <LoadingSpinner />\n          </div>\n          )}\n          {!isLoading && loadedPastEvents && <PastEventList items={loadedPastEvents} />}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptHomePastEvents;","import React from 'react';\n\nexport const FORMAT_DATE = (date) => {\n  let options = { year: 'numeric', month: 'numeric', day: 'numeric' };\n  return new Date(date).toLocaleDateString([],options);\n}\n\nexport const YEAR_OPTIONS = () => {\n  const currentYear = (new Date(Date.now())).getFullYear()\n  const startYear = currentYear - 2;\n  const endYear = currentYear + 2;\n  let options = [];\n  for (let year = startYear; year < endYear; year++){\n    options.push(year.toString())\n  }\n  return options;\n}\n\nexport const BEAT_MISS_OPTIONS = () => {\n  const beatMissOptions = [];\n  for (let i=0; i<9; i++){\n    beatMissOptions.push(<option value={i}>{i}</option>)\n  }\n  return beatMissOptions;\n}\n\nexport const RAISE_CUT_OPTIONS = () => {\n  const raiseCutOptions = [];\n  for (let i=0; i<4; i++){\n    raiseCutOptions.push(<option value={i}>{i}</option>)\n  }\n  return raiseCutOptions;\n}\n\nexport const SA_RATING_OPTIONS = () => {\n  const options = \n  ['Very Bearish', 'Bearish', 'Neutral', 'Bullish', 'Very Bullish'];\n  return options.map( rating => {\n    return (\n    <option value={rating}>{rating}</option>\n    );\n  });\n}\n\nexport const SA_GRADING_OPTIONS = () => {\n  const options = \n  [\n    'A+', 'A', 'A-',\n    'B+', 'B', 'B-',\n    'C+', 'C', 'C-',\n    'D+', 'D', 'D-',\n    'E+', 'E', 'E-',\n    'F'\n  ];\n  return options.map( grade => {\n    return (\n    <option value={grade}>{grade}</option>\n    );\n  });\n}\n\nexport const HYPOTHESIS_OPTIONS = () => {\n  const options = \n  [\n    'Consensus Decrease on NE',\n    'Consensus Increase on NE',\n    'Cut Guidance on NE',\n    'Raise Guidance on NE'\n  ]\n  return options.map( hypothesis => {\n    return (\n    <option value={hypothesis}>{hypothesis}</option>   \n    );\n  });\n}\n\nexport const DIRECTION_OPTIONS = () => {\n  const options = \n  [\n    'Short',\n    'Long',\n    'Bi-Directional',\n  ]\n  return options.map( direction => {\n    return (\n    <option value={direction}>{direction}</option>   \n    );\n  });\n}","import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst NewTranscriptRating = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState('Unrated');\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const currentPage = window.location.href.split(3000)[1]\n  const history = useHistory();\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/transcriptRatings',\n        'POST', \n        JSON.stringify({\n          \"rating\": rating,\n          \"transcript\": transcriptId,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n      history.push('/');\n      history.push(currentPage);\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <label className=\"transcript-rating__label\">\n            Transcript Rating:\n            <select value={rating} onChange={ratingChangeHandler}>\n              <option value=\"Unrated\">Unrated</option>\n              <option value=\"Empty\">Empty</option>\n              <option value=\"Weak\">Weak</option>\n              <option value=\"(Pre-Report): Short - Tier Two\">(Pre-Report): Short - Tier Two</option>\n              <option value=\"(Pre-Report): Long - Tier Two\">(Pre-Report): Long - Tier Two</option>\n              <option value=\"(Pre-Report): Short - Tier One\">(Pre-Report): Short - Tier One</option>\n              <option value=\"(Pre-Report): Long - Tier One\">(Pre-Report): Long - Tier One</option>\n              <option value=\"(Post-Report): Short - Success\">(Post-Report): Short - Success</option>\n              <option value=\"(Post-Report): Long - Success\">(Post-Report): Long - Success</option>\n              <option value=\"(Post-Report): Short - Misinterpreted\">(Post-Report): Short - Misinterpreted Evidence</option>\n              <option value=\"(Post-Report): Long - Misinterpreted\">(Post-Report): Long - Misinterpreted Evidence</option>\n              <option value=\"(Post-Report): Short - Adverse Reaction\">(Post-Report): Short - Adverse Reaction</option>\n              <option value=\"(Post-Report): Long - Adverse Reaction\">(Post-Report): Long - Adverse Reaction</option>\n            </select>\n          </label>\n        </div>\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <div className=\"transcript-rating-form__button\">\n            <Button type=\"submit\">\n                Update Transcript Rating\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewTranscriptRating;","import React, { useContext, useState } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst UpdateTranscriptRating = props => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState(props.rating);\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/transcriptRatings/${props._id}`,\n        'PATCH', \n        JSON.stringify({\n          \"rating\": rating,\n          \"transcriptRatingId\": props._id,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n        <div className=\"transcript-ratings-side-by-side-container\">\n        <label className=\"transcript-rating__label\">\n          Transcript Rating:\n          <select value={rating} onChange={ratingChangeHandler}>\n            <option value=\"Unrated\">Unrated</option>\n            <option value=\"Empty\">Empty</option>\n            <option value=\"Weak\">Weak</option>\n            <option value=\"(Pre-Report): Short - Tier Two\">(Pre-Report): Short - Tier Two</option>\n            <option value=\"(Pre-Report): Long - Tier Two\">(Pre-Report): Long - Tier Two</option>\n            <option value=\"(Pre-Report): Short - Tier One\">(Pre-Report): Short - Tier One</option>\n            <option value=\"(Pre-Report): Long - Tier One\">(Pre-Report): Long - Tier One</option>\n            <option value=\"(Post-Report): Short - Success\">(Post-Report): Short - Success</option>\n            <option value=\"(Post-Report): Long - Success\">(Post-Report): Long - Success</option>\n            <option value=\"(Post-Report): Short - Misinterpreted\">(Post-Report): Short - Misinterpreted</option>\n            <option value=\"(Post-Report): Long - Misinterpreted\">(Post-Report): Long - Misinterpreted</option>\n            <option value=\"(Post-Report): Short - Adverse Reaction\">(Post-Report): Short - Adverse Reaction</option>\n            <option value=\"(Post-Report): Long - Adverse Reaction\">(Post-Report): Long - Adverse Reaction</option>\n          </select>\n        </label>\n        </div>\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <div className=\"transcript-rating-form__button\">\n            <Button type=\"submit\">\n                Update Transcript Rating\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateTranscriptRating;","import React, { useState, useEffect, useContext} from 'react';\nimport { useParams } from 'react-router-dom'\n\nimport NewTranscriptRating from './NewTranscriptRating';\nimport UpdateTranscriptRating from './UpdateTranscriptRating';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport './RatingForm.css';\n\nconst TranscriptRatingForm = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const [ loadedTranscriptRating, setLoadedTranscriptRating ] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  useEffect(() => {\n    const fetchTranscriptRating = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcriptRatings/${auth.username}/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscriptRating(responseData.transcriptRating);\n      } catch (err) {}\n    };\n    fetchTranscriptRating();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    {isLoading && (<div className=\"center\">\n      <LoadingSpinner />\n    </div>\n    )}\n    <header className=\"rating-header\">\n    {!isLoading && loadedTranscriptRating && !loadedTranscriptRating._id && (\n    <NewTranscriptRating />)}\n    {!isLoading && loadedTranscriptRating && loadedTranscriptRating._id && (\n    <UpdateTranscriptRating {...loadedTranscriptRating} />)}\n    </header>\n  </React.Fragment>\n  );\n}\n\nexport default TranscriptRatingForm;","import React, { useContext, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './TranscriptTitle.css';\nimport TranscriptRatingForm from '../../ratings/components/TranscriptRatingForm';\n\nconst TranscriptTitle = () => {\n  const auth = useContext(AuthContext);\n  const [ loadedTranscript, setLoadedTranscript] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const transcriptId = useParams().transcriptId;\n  const pageName = () => {\n    const currentUrl = window.location.href;\n    if (currentUrl.includes('exchanges')) {\n      return 'Highly-Rated QA'\n    } else if (currentUrl.includes('opening-statements')) {\n      return 'Highly-Rated OS'\n    } else if (currentUrl.includes('full-transcript')) {\n      return 'Full Transcript'\n    } else if (currentUrl.includes('primary-evidence')) {\n      return 'Upcoming Trades'\n    } else if (currentUrl.includes('guidance-versus-consensus')) {\n      return 'Guidance vs. Consensus'\n    } else if (currentUrl.includes('past-events')) {\n      return 'Past Events'\n    } else if (currentUrl.includes('tendencies')) {\n      return 'Tendencies'\n    } else if (currentUrl.includes('sentiment')) {\n      return 'Sentiment'\n    } else if (currentUrl.includes('trade-submission')) {\n      return 'Trade Submission'\n    } else if (currentUrl.includes('reaction-evaluation')) {\n      return 'Reaction Evaluation'\n    }\n  }\n\n  useEffect(() => {\n    const fetchTranscript = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcripts/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscript(responseData.transcript);\n      } catch (err) {}\n    };\n    fetchTranscript();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (<div className=\"center\">\n        <LoadingSpinner />\n      </div>\n      )}\n      {!isLoading && loadedTranscript && (\n        <header className=\"transcript-title\">\n          <h2>{loadedTranscript.ticker.tickerText} {loadedTranscript.fiscalQuarter} {loadedTranscript.fiscalYear}: {pageName()}</h2>\n        </header>)}\n        <TranscriptRatingForm />\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptTitle;","import React from 'react';\n\nimport './TranscriptHeader.css';\n\nconst TranscriptHeader = props => {\n  return (\n    <header className=\"transcript-header\">\n      {props.children}\n    </header>\n  );\n};\n\nexport default TranscriptHeader","import React, { useContext } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './TranscriptNavLinks.css';\n\nconst TranscriptNavLinks = props => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  return (\n    <ul className=\"transcript-nav-links\">\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/exchanges`} exact>QA</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/opening-statements`} exact>OS</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/full-transcript`} exact>Full Transcript</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/guidance-versus-consensus`} exact>Guidance vs. Consensus</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/past-events`}  exact>Past Events</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/tendencies`}  exact>Tendencies</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/sentiment`}  exact>Sentiment</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/trade-submission`}  exact>Trade Submission</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/reaction-evaluation`}  exact>Reaction Evaluation</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default TranscriptNavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './TranscriptDropdown.css';\n\nconst TranscriptDropdown = props => {\n  const content = (\n    <aside className=\"transcript-dropdown\">{props.children}</aside>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('dropdown-hook'));\n};\n\nexport default TranscriptDropdown;","import React, { useState } from 'react';\n\nimport TranscriptHeader from './TranscriptHeader';\nimport TranscriptNavLinks from './TranscriptNavLinks';\nimport TranscriptDropdown from './TranscriptDropdown';\nimport Backdrop from '../../shared/components/UIElements/Backdrop';\nimport './TranscriptNavigation.css';\n\nconst TranscriptNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  \n  const openDrawer = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawer = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawer} />}\n      {drawerIsOpen &&\n      <TranscriptDropdown>\n        <nav className=\"transcript-navigation__drawer-nav\">\n          <TranscriptNavLinks />\n        </nav>\n      </TranscriptDropdown>}\n      <TranscriptHeader>\n        <button className=\"transcript-navigation__menu-btn\" onClick={openDrawer}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <nav className=\"transcript-navigation__header-nav\">\n          <TranscriptNavLinks />\n        </nav>\n      </TranscriptHeader>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptNavigation;","import React from 'react';\n\nimport TranscriptTitle from './TranscriptTitle';\nimport TranscriptNavigation from './TranscriptNavigation';\nimport './TranscriptHome.css';\n\nconst TranscriptHome = () => {\n\n  return (\n    <React.Fragment>\n      <div className=\"transcript-home-title-container\">\n        <TranscriptTitle />\n        <TranscriptNavigation />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptHome;","import React, { useState } from \"react\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\n\nexport default function DatePicker({ date, onChange }) {\n  const [focused, setFocused] = useState(false);\n\n  return (\n    <SingleDatePicker\n      numberOfMonths={window.innerWidth < 600 ? 1 : 2}\n      onDateChange={date => onChange({ target: { value: date } })}\n      onFocusChange={({ focused }) => setFocused(focused)}\n      focused={focused}\n      date={date}\n      displayFormat=\"YYYY-MM-DD\"\n      isDayBlocked={m => m.day() === 6 || m.day() === 0}\n      hideKeyboardShortcutsPanel\n      // withPortal\n      withFullScreenPortal={window.innerWidth < 400}\n    />\n  );\n}\n"],"sourceRoot":""}