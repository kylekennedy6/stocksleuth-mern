{"version":3,"sources":["analysis/ReactionEvaluation/NewReactionEvaluation.js","analysis/ReactionEvaluation/UpdateReactionEvaluation.js","analysis/ReactionEvaluation/ReactionEvaluationItem.js","transcripts/pages/TranscriptHomeReactionEvaluation.js","ratings/components/NewTranscriptRating.js","ratings/components/UpdateTranscriptRating.js","ratings/components/TranscriptRatingForm.js","transcripts/components/TranscriptTitle.js","transcripts/components/TranscriptHeader.js","transcripts/components/TranscriptNavLinks.js","transcripts/components/TranscriptDropdown.js","transcripts/components/TranscriptNavigation.js","transcripts/components/TranscriptHome.js","shared/components/DatePicker.js"],"names":["NewReactionEvaluation","auth","useContext","AuthContext","transcriptId","useParams","useHttpClient","isLoading","error","sendRequest","clearError","useState","moment","entranceDate","setEntranceDate","exitDate","setExitDate","useForm","actualPortfolioWeight","value","isValid","singleDayReturn","actualReturn","returnOnPortfolio","notes","formState","inputHandler","history","useHistory","reactionEvaluationSubmitHandler","event","a","preventDefault","process","JSON","stringify","inputs","userId","Authorization","token","push","username","Fragment","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","DatePicker","date","onChange","e","target","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","Button","disabled","UpdateReactionEvaluation","props","_id","initialValue","initialValid","ReactionEvaluationItem","TranscriptHomeReactionEvaluation","loadedReactionEvaluation","setLoadedReactionEvaluation","useEffect","responseData","reactionEvaluation","fetchReactionEvaluation","TranscriptHome","NewTranscriptRating","rating","setRating","currentPage","window","location","href","split","ratingSubmitHandler","as","Overlay","UpdateTranscriptRating","TranscriptRatingForm","loadedTranscriptRating","setLoadedTranscriptRating","transcriptRating","fetchTranscriptRating","TranscriptTitle","loadedTranscript","setLoadedTranscript","transcript","fetchTranscript","ticker","tickerText","fiscalQuarter","fiscalYear","currentUrl","includes","pageName","TranscriptHeader","children","TranscriptNavLinks","to","exact","TranscriptDropdown","content","ReactDOM","createPortal","document","getElementById","TranscriptNavigation","drawerIsOpen","setDrawerIsOpen","Backdrop","onClick","focused","setFocused","numberOfMonths","innerWidth","onDateChange","onFocusChange","displayFormat","isDayBlocked","m","day","hideKeyboardShortcutsPanel","withFullScreenPortal"],"mappings":"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","file":"static/js/7.42c60269.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport moment from \"moment\";\nimport DatePicker from '../../shared/components/DatePicker';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport '../AnalysisItem.css';\n\nconst NewReactionEvaluation = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const [entranceDate, setEntranceDate] = useState(moment);\n  const [exitDate, setExitDate] = useState(moment);\n\n  const [formState, inputHandler] = useForm(\n    {\n      actualPortfolioWeight: {\n        value: 0,\n        isValid: true\n      },\n      singleDayReturn: {\n        value: 0,\n        isValid: true\n      },\n      actualReturn: {\n        value: 0,\n        isValid: true\n      },\n      returnOnPortfolio: {\n        value: 0,\n        isValid: false\n      },\n      notes: {\n        value: 0,\n        isValid: true\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const reactionEvaluationSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/reactionEvaluation',\n        'POST',\n        JSON.stringify({\n          \"actualPortfolioWeight\": formState.inputs.actualPortfolioWeight.value,\n          \"entranceDate\": entranceDate,\n          \"exitDate\": exitDate,\n          \"singleDayReturn\": formState.inputs.singleDayReturn.value,\n          \"actualReturn\": formState.inputs.actualReturn.value,\n          \"returnOnPortfolio\": formState.inputs.returnOnPortfolio.value,\n          \"notes\": formState.inputs.notes.value,\n          \"transcript\": transcriptId,\n          \"creator\": auth.userId\n        }), {\n          Authorization: 'Bearer ' + auth.token,\n          'Content-Type': 'application/json',\n        });\n        history.push('/');\n        history.push(`/users/${auth.username}/transcripts/${transcriptId}/reaction-evaluation`);\n      } catch (err) {}\n    };\n\n    return (\n      <React.Fragment>\n        <ErrorModal error={error} onClear={clearError} />\n        <form className=\"create-form\" onSubmit={reactionEvaluationSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Add Reaction Evaluation:</h2>\n        <div className=\"form-container\">\n          <div className=\"side-by-side-container\">\n            <h3>Timing:</h3>  \n            <label>\n              Entrance Date:\n              <DatePicker date={entranceDate} onChange={e => setEntranceDate(e.target.value)} />\n            </label>\n            <label>\n              Exit Date:\n              <DatePicker date={exitDate} onChange={e => setExitDate(e.target.value)} />\n            </label>\n          </div>\n          <div className=\"side-by-side-container\">\n            <h3>Portfolio:</h3>\n            <Input\n              id=\"actualPortfolioWeight\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Actual Portfolio Weight (%)\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid percentage +/- (0-999).\"\n              onInput={inputHandler}\n            /> \n            <Input\n              id=\"actualReturn\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Actual Return\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />   \n            <Input\n              id=\"returnOnPortfolio\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Portfolio Return (%)\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />    \n          </div> \n          <div className=\"side-by-side-container\">\n            <h3>Post-Mortem:</h3>\n            <Input\n                id=\"singleDayReturn\"\n                element=\"input\"\n                type=\"text\"\n                label=\"Single-Day Return\"\n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Please enter a valid decimal.\"\n                onInput={inputHandler}\n              />\n              <Input\n                id=\"notes\"\n                element=\"textarea\"\n                type=\"text\"\n                label=\"Notes:\"\n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Please enter a valid percentage +/- (0-999).\"\n                onInput={inputHandler}\n              />\n          </div>\n        </div>\n        <div className=\"analysis-form__button\">\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            Submit\n        </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\n\nexport default NewReactionEvaluation;","import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport moment from \"moment\";\nimport DatePicker from '../../shared/components/DatePicker';\nimport {\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport '../AnalysisForm.css';\n\nconst UpdateReactionEvaluation = props => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const [entranceDate, setEntranceDate] = useState(moment(props.entranceDate));\n  const [exitDate, setExitDate] = useState(moment(props.exitDate));\n\n  const [formState, inputHandler] = useForm(\n    {\n      actualPortfolioWeight: {\n        value: 0,\n        isValid: true\n      },\n      singleDayReturn: {\n        value: 0,\n        isValid: true\n      },\n      actualReturn: {\n        value: 0,\n        isValid: true\n      },\n      returnOnPortfolio: {\n        value: 0,\n        isValid: false\n      },\n      notes: {\n        value: 0,\n        isValid: true\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const reactionEvaluationSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/reactionEvaluation/${props._id}`,\n        'PATCH',\n        JSON.stringify({\n          \"actualPortfolioWeight\": formState.inputs.actualPortfolioWeight.value,\n          \"entranceDate\": entranceDate,\n          \"exitDate\": exitDate,\n          \"singleDayReturn\": formState.inputs.singleDayReturn.value,\n          \"actualReturn\": formState.inputs.actualReturn.value,\n          \"returnOnPortfolio\": formState.inputs.returnOnPortfolio.value,\n          \"notes\": formState.inputs.notes.value,\n          \"reactionEvaluationId\": props._id,\n          \"creator\": auth.userId\n        }), {\n          Authorization: 'Bearer ' + auth.token,\n          'Content-Type': 'application/json',\n        });\n        history.push('/');\n        history.push(`/users/${auth.username}/transcripts/${transcriptId}/reaction-evaluation`);\n      } catch (err) {}\n    };\n\n    return (\n      <React.Fragment>\n        <ErrorModal error={error} onClear={clearError} />\n        <form className=\"create-form\" onSubmit={reactionEvaluationSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Reaction Evaluation:</h2>\n        <div className=\"form-container\">\n          <div className=\"side-by-side-container\">\n            <h3>Timing:</h3>  \n            <label>\n              Entrance Date:\n              <DatePicker date={entranceDate} onChange={e => setEntranceDate(e.target.value)} />\n            </label>\n            <label>\n              Exit Date:\n              <DatePicker date={exitDate} onChange={e => setExitDate(e.target.value)} />\n            </label>\n          </div>\n          <div className=\"side-by-side-container\">\n            <h3>Portfolio:</h3>          \n            <Input\n              id=\"actualPortfolioWeight\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Actual Portfolio Weight (%)\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid percentage +/- (0-999).\"\n              onInput={inputHandler}\n              initialValue={props.actualPortfolioWeight}\n              initialValid={true}\n            />\n          <Input\n            id=\"actualReturn\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Actual Return\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid decimal.\"\n            onInput={inputHandler}\n            initialValue={props.actualReturn}\n            initialValid={true}\n          />\n          <Input\n            id=\"returnOnPortfolio\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Portfolio Return (%)\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid decimal.\"\n            onInput={inputHandler}\n            initialValue={props.returnOnPortfolio}\n            initialValid={true}\n          />\n        </div>  \n        <div className=\"side-by-side-container\">\n          <h3>Post-Mortem:</h3>          \n          <Input\n            id=\"singleDayReturn\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Single-Day Return\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid decimal.\"\n            onInput={inputHandler}\n            initialValue={props.singleDayReturn}\n            initialValid={true}\n          />\n          <Input\n            id=\"notes\"\n            element=\"textarea\"\n            type=\"text\"\n            label=\"Notes:\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid percentage +/- (0-999).\"\n            onInput={inputHandler}\n            initialValue={props.notes}\n            initialValid={true}\n          />\n        </div>\n      </div>\n      <div className=\"analysis-form__button\">\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            Update\n        </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\n\nexport default UpdateReactionEvaluation;","import React from 'react';\n\nimport NewReactionEvaluation from './NewReactionEvaluation';\nimport '../AnalysisItem.css';\nimport UpdateReactionEvaluation from './UpdateReactionEvaluation';\n\nconst ReactionEvaluationItem = props => {\n\n  if (!props._id) {\n    return (\n      <React.Fragment>\n        <NewReactionEvaluation />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <UpdateReactionEvaluation {...props}/>\n  );\n\n}\nexport default ReactionEvaluationItem;","import React, {useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport TranscriptHome from '../components/TranscriptHome';\nimport ReactionEvaluationItem from '../../analysis/ReactionEvaluation/ReactionEvaluationItem';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nconst TranscriptHomeReactionEvaluation = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId\n\n  const [loadedReactionEvaluation, setLoadedReactionEvaluation] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  useEffect(() => {\n    const fetchReactionEvaluation = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/reactionEvaluation/${auth.username}/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedReactionEvaluation(responseData.reactionEvaluation);\n      } catch (err) {}\n    };\n    fetchReactionEvaluation();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n      <div className=\"main-container\">\n        <TranscriptHome />\n          <div className=\"content-container\">\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (<div className=\"center\">\n            <LoadingSpinner />\n          </div>\n          )}\n          {!isLoading && <ReactionEvaluationItem {...loadedReactionEvaluation} />}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptHomeReactionEvaluation;","import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst NewTranscriptRating = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState('Unrated');\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const currentPage = window.location.href.split(3000)[1]\n  const history = useHistory();\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/transcriptRatings',\n        'POST', \n        JSON.stringify({\n          \"rating\": rating,\n          \"transcript\": transcriptId,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n      history.push('/');\n      history.push(currentPage);\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <label className=\"transcript-rating__label\">\n            Transcript Rating:\n            <select value={rating} onChange={ratingChangeHandler}>\n              <option value=\"Unrated\">Unrated</option>\n              <option value=\"Empty\">Empty</option>\n              <option value=\"Weak\">Weak</option>\n              <option value=\"(Pre-Report): Short - Tier Two\">(Pre-Report): Short - Tier Two</option>\n              <option value=\"(Pre-Report): Long - Tier Two\">(Pre-Report): Long - Tier Two</option>\n              <option value=\"(Pre-Report): Short - Tier One\">(Pre-Report): Short - Tier One</option>\n              <option value=\"(Pre-Report): Long - Tier One\">(Pre-Report): Long - Tier One</option>\n              <option value=\"(Post-Report): Short - Success\">(Post-Report): Short - Success</option>\n              <option value=\"(Post-Report): Long - Success\">(Post-Report): Long - Success</option>\n              <option value=\"(Post-Report): Short - Misinterpreted\">(Post-Report): Short - Misinterpreted Evidence</option>\n              <option value=\"(Post-Report): Long - Misinterpreted\">(Post-Report): Long - Misinterpreted Evidence</option>\n              <option value=\"(Post-Report): Short - Adverse Reaction\">(Post-Report): Short - Adverse Reaction</option>\n              <option value=\"(Post-Report): Long - Adverse Reaction\">(Post-Report): Long - Adverse Reaction</option>\n            </select>\n          </label>\n        </div>\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <div className=\"transcript-rating-form__button\">\n            <Button type=\"submit\">\n                Update Transcript Rating\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewTranscriptRating;","import React, { useContext, useState } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst UpdateTranscriptRating = props => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState(props.rating);\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/transcriptRatings/${props._id}`,\n        'PATCH', \n        JSON.stringify({\n          \"rating\": rating,\n          \"transcriptRatingId\": props._id,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n        <div className=\"transcript-ratings-side-by-side-container\">\n        <label className=\"transcript-rating__label\">\n          Transcript Rating:\n          <select value={rating} onChange={ratingChangeHandler}>\n            <option value=\"Unrated\">Unrated</option>\n            <option value=\"Empty\">Empty</option>\n            <option value=\"Weak\">Weak</option>\n            <option value=\"(Pre-Report): Short - Tier Two\">(Pre-Report): Short - Tier Two</option>\n            <option value=\"(Pre-Report): Long - Tier Two\">(Pre-Report): Long - Tier Two</option>\n            <option value=\"(Pre-Report): Short - Tier One\">(Pre-Report): Short - Tier One</option>\n            <option value=\"(Pre-Report): Long - Tier One\">(Pre-Report): Long - Tier One</option>\n            <option value=\"(Post-Report): Short - Success\">(Post-Report): Short - Success</option>\n            <option value=\"(Post-Report): Long - Success\">(Post-Report): Long - Success</option>\n            <option value=\"(Post-Report): Short - Misinterpreted\">(Post-Report): Short - Misinterpreted</option>\n            <option value=\"(Post-Report): Long - Misinterpreted\">(Post-Report): Long - Misinterpreted</option>\n            <option value=\"(Post-Report): Short - Adverse Reaction\">(Post-Report): Short - Adverse Reaction</option>\n            <option value=\"(Post-Report): Long - Adverse Reaction\">(Post-Report): Long - Adverse Reaction</option>\n          </select>\n        </label>\n        </div>\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <div className=\"transcript-rating-form__button\">\n            <Button type=\"submit\">\n                Update Transcript Rating\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateTranscriptRating;","import React, { useState, useEffect, useContext} from 'react';\nimport { useParams } from 'react-router-dom'\n\nimport NewTranscriptRating from './NewTranscriptRating';\nimport UpdateTranscriptRating from './UpdateTranscriptRating';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport './RatingForm.css';\n\nconst TranscriptRatingForm = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const [ loadedTranscriptRating, setLoadedTranscriptRating ] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  useEffect(() => {\n    const fetchTranscriptRating = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcriptRatings/${auth.username}/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscriptRating(responseData.transcriptRating);\n      } catch (err) {}\n    };\n    fetchTranscriptRating();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    {isLoading && (<div className=\"center\">\n      <LoadingSpinner />\n    </div>\n    )}\n    <header className=\"rating-header\">\n    {!isLoading && loadedTranscriptRating && !loadedTranscriptRating._id && (\n    <NewTranscriptRating />)}\n    {!isLoading && loadedTranscriptRating && loadedTranscriptRating._id && (\n    <UpdateTranscriptRating {...loadedTranscriptRating} />)}\n    </header>\n  </React.Fragment>\n  );\n}\n\nexport default TranscriptRatingForm;","import React, { useContext, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './TranscriptTitle.css';\nimport TranscriptRatingForm from '../../ratings/components/TranscriptRatingForm';\n\nconst TranscriptTitle = () => {\n  const auth = useContext(AuthContext);\n  const [ loadedTranscript, setLoadedTranscript] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const transcriptId = useParams().transcriptId;\n  const pageName = () => {\n    const currentUrl = window.location.href;\n    if (currentUrl.includes('exchanges')) {\n      return 'Highly-Rated QA'\n    } else if (currentUrl.includes('opening-statements')) {\n      return 'Highly-Rated OS'\n    } else if (currentUrl.includes('full-transcript')) {\n      return 'Full Transcript'\n    } else if (currentUrl.includes('primary-evidence')) {\n      return 'Upcoming Trades'\n    } else if (currentUrl.includes('guidance-versus-consensus')) {\n      return 'Guidance vs. Consensus'\n    } else if (currentUrl.includes('past-events')) {\n      return 'Past Events'\n    } else if (currentUrl.includes('tendencies')) {\n      return 'Tendencies'\n    } else if (currentUrl.includes('sentiment')) {\n      return 'Sentiment'\n    } else if (currentUrl.includes('trade-submission')) {\n      return 'Trade Submission'\n    } else if (currentUrl.includes('reaction-evaluation')) {\n      return 'Reaction Evaluation'\n    }\n  }\n\n  useEffect(() => {\n    const fetchTranscript = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcripts/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscript(responseData.transcript);\n      } catch (err) {}\n    };\n    fetchTranscript();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (<div className=\"center\">\n        <LoadingSpinner />\n      </div>\n      )}\n      {!isLoading && loadedTranscript && (\n        <header className=\"transcript-title\">\n          <h2>{loadedTranscript.ticker.tickerText} {loadedTranscript.fiscalQuarter} {loadedTranscript.fiscalYear}: {pageName()}</h2>\n        </header>)}\n        <TranscriptRatingForm />\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptTitle;","import React from 'react';\n\nimport './TranscriptHeader.css';\n\nconst TranscriptHeader = props => {\n  return (\n    <header className=\"transcript-header\">\n      {props.children}\n    </header>\n  );\n};\n\nexport default TranscriptHeader","import React, { useContext } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './TranscriptNavLinks.css';\n\nconst TranscriptNavLinks = props => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  return (\n    <ul className=\"transcript-nav-links\">\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/exchanges`} exact>QA</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/opening-statements`} exact>OS</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/full-transcript`} exact>Full Transcript</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/guidance-versus-consensus`} exact>Guidance vs. Consensus</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/past-events`}  exact>Past Events</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/tendencies`}  exact>Tendencies</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/sentiment`}  exact>Sentiment</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/trade-submission`}  exact>Trade Submission</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/reaction-evaluation`}  exact>Reaction Evaluation</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default TranscriptNavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './TranscriptDropdown.css';\n\nconst TranscriptDropdown = props => {\n  const content = (\n    <aside className=\"transcript-dropdown\">{props.children}</aside>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('dropdown-hook'));\n};\n\nexport default TranscriptDropdown;","import React, { useState } from 'react';\n\nimport TranscriptHeader from './TranscriptHeader';\nimport TranscriptNavLinks from './TranscriptNavLinks';\nimport TranscriptDropdown from './TranscriptDropdown';\nimport Backdrop from '../../shared/components/UIElements/Backdrop';\nimport './TranscriptNavigation.css';\n\nconst TranscriptNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  \n  const openDrawer = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawer = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawer} />}\n      {drawerIsOpen &&\n      <TranscriptDropdown>\n        <nav className=\"transcript-navigation__drawer-nav\">\n          <TranscriptNavLinks />\n        </nav>\n      </TranscriptDropdown>}\n      <TranscriptHeader>\n        <button className=\"transcript-navigation__menu-btn\" onClick={openDrawer}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <nav className=\"transcript-navigation__header-nav\">\n          <TranscriptNavLinks />\n        </nav>\n      </TranscriptHeader>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptNavigation;","import React from 'react';\n\nimport TranscriptTitle from './TranscriptTitle';\nimport TranscriptNavigation from './TranscriptNavigation';\nimport './TranscriptHome.css';\n\nconst TranscriptHome = () => {\n\n  return (\n    <React.Fragment>\n      <div className=\"transcript-home-title-container\">\n        <TranscriptTitle />\n        <TranscriptNavigation />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptHome;","import React, { useState } from \"react\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\n\nexport default function DatePicker({ date, onChange }) {\n  const [focused, setFocused] = useState(false);\n\n  return (\n    <SingleDatePicker\n      numberOfMonths={window.innerWidth < 600 ? 1 : 2}\n      onDateChange={date => onChange({ target: { value: date } })}\n      onFocusChange={({ focused }) => setFocused(focused)}\n      focused={focused}\n      date={date}\n      displayFormat=\"YYYY-MM-DD\"\n      isDayBlocked={m => m.day() === 6 || m.day() === 0}\n      hideKeyboardShortcutsPanel\n      // withPortal\n      withFullScreenPortal={window.innerWidth < 400}\n    />\n  );\n}\n"],"sourceRoot":""}