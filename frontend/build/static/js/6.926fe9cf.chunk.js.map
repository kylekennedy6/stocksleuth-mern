{"version":3,"sources":["analysis/TradeSubmission/NewTradeSubmission.js","analysis/TradeSubmission/UpdateTradeSubmission.js","analysis/TradeSubmission/TradeSubmissionItem.js","transcripts/pages/TranscriptHomeTradeSubmission.js","shared/util/formOptions.js","ratings/components/NewTranscriptRating.js","ratings/components/UpdateTranscriptRating.js","ratings/components/TranscriptRatingForm.js","transcripts/components/TranscriptTitle.js","transcripts/components/TranscriptHeader.js","transcripts/components/TranscriptNavLinks.js","transcripts/components/TranscriptDropdown.js","transcripts/components/TranscriptNavigation.js","transcripts/components/TranscriptHome.js","shared/components/DatePicker.js"],"names":["NewTradeSubmission","auth","useContext","AuthContext","transcriptId","useParams","useHttpClient","isLoading","error","sendRequest","clearError","useState","likelyPreannounce","setLikelyPreannounce","hypothesis","setHypothesis","direction","setDirection","moment","entranceDate","setEntranceDate","useForm","predictionIntervalsHighDownside","value","isValid","predictionIntervalsModerateDownside","predictionIntervalsLowDownside","predictionIntervalsLowUpside","predictionIntervalsModerateUpside","predictionIntervalsHighUpside","targetPortfolioWeight","notes","formState","inputHandler","history","useHistory","tradeSubmissionSubmitHandler","event","a","preventDefault","process","JSON","stringify","inputs","userId","Authorization","token","push","username","Fragment","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","onChange","target","HYPOTHESIS_OPTIONS","DIRECTION_OPTIONS","Input","id","element","type","rows","label","validators","VALIDATOR_REQUIRE","onInput","name","checked","DatePicker","date","e","errorText","Button","disabled","UpdateTradeSubmission","props","_id","initialValue","initialValid","predictionIntervals","highDownside","moderateDownside","lowDownside","lowUpside","moderateUpside","highUpside","TradeSubmissionItem","TranscriptHomeTradeSubmission","loadedTradeSubmission","setLoadedTradeSubmission","useEffect","responseData","tradeSubmission","fetchTradeSubmission","TranscriptHome","FORMAT_DATE","Date","toLocaleDateString","year","month","day","YEAR_OPTIONS","currentYear","now","getFullYear","endYear","options","toString","BEAT_MISS_OPTIONS","beatMissOptions","i","RAISE_CUT_OPTIONS","raiseCutOptions","SA_RATING_OPTIONS","map","rating","SA_GRADING_OPTIONS","grade","NewTranscriptRating","setRating","currentPage","window","location","href","split","ratingSubmitHandler","as","Overlay","UpdateTranscriptRating","TranscriptRatingForm","loadedTranscriptRating","setLoadedTranscriptRating","transcriptRating","fetchTranscriptRating","TranscriptTitle","loadedTranscript","setLoadedTranscript","transcript","fetchTranscript","ticker","tickerText","fiscalQuarter","fiscalYear","currentUrl","includes","pageName","TranscriptHeader","children","TranscriptNavLinks","to","exact","TranscriptDropdown","content","ReactDOM","createPortal","document","getElementById","TranscriptNavigation","drawerIsOpen","setDrawerIsOpen","Backdrop","onClick","focused","setFocused","numberOfMonths","innerWidth","onDateChange","onFocusChange","displayFormat","isDayBlocked","m","hideKeyboardShortcutsPanel","withFullScreenPortal"],"mappings":"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","file":"static/js/6.926fe9cf.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport moment from \"moment\";\nimport DatePicker from '../../shared/components/DatePicker';\nimport { HYPOTHESIS_OPTIONS, DIRECTION_OPTIONS } from '../../shared/util/formOptions';\nimport {\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport '../AnalysisItem.css';\n\nconst NewTradeSubmission = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  \n  const [likelyPreannounce, setLikelyPreannounce] = useState(false);\n  const [hypothesis, setHypothesis] = useState('Company Will Raise Guidance on NE');\n  const [direction, setDirection] = useState('Long');\n  const [entranceDate, setEntranceDate] = useState(moment);\n\n  const likelyPreannounceChangeHandler = event => {\n    setLikelyPreannounce(event.target.checked);\n  };\n\n  const hypothesisChangeHandler = event => {\n    setHypothesis(event.target.value);\n  }\n\n  const directionChangeHandler = event => {\n    setDirection(event.target.value);\n  }\n\n  const [formState, inputHandler] = useForm(\n    {\n      predictionIntervalsHighDownside: {\n        value: 0,\n        isValid: true\n      },\n      predictionIntervalsModerateDownside: {\n        value: 0,\n        isValid: false\n      },\n      predictionIntervalsLowDownside: {\n        value: 0,\n        isValid: true\n      },\n      predictionIntervalsLowUpside: {\n        value: 0,\n        isValid: true\n      },\n      predictionIntervalsModerateUpside: {\n        value: 0,\n        isValid: true\n      },\n      predictionIntervalsHighUpside: {\n        value: 0,\n        isValid: false\n      },\n      targetPortfolioWeight: {\n        value: 0,\n        isValid: true\n      },\n      notes: {\n        value: 0,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const tradeSubmissionSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/tradeSubmission',\n        'POST',\n        JSON.stringify({\n          \"hypothesis\": hypothesis,\n          \"predictionIntervalsHighDownside\": formState.inputs.predictionIntervalsHighDownside.value,\n          \"predictionIntervalsModerateDownside\": formState.inputs.predictionIntervalsModerateDownside.value,\n          \"predictionIntervalsLowDownside\": formState.inputs.predictionIntervalsLowDownside.value,\n          \"predictionIntervalsLowUpside\": formState.inputs.predictionIntervalsLowUpside.value,\n          \"predictionIntervalsModerateUpside\": formState.inputs.predictionIntervalsModerateUpside.value,\n          \"predictionIntervalsHighUpside\": formState.inputs.predictionIntervalsHighUpside.value,\n          \"direction\": direction,\n          \"targetPortfolioWeight\": formState.inputs.targetPortfolioWeight.value,\n          \"likelyPreannounce\": likelyPreannounce,\n          \"entranceDate\": entranceDate,\n          \"notes\": formState.inputs.notes.value,\n          \"transcript\": transcriptId,\n          \"creator\": auth.userId\n        }), {\n          Authorization: 'Bearer ' + auth.token,\n          'Content-Type': 'application/json',\n        });\n        history.push('/');\n        history.push(`/users/${auth.username}/transcripts/${transcriptId}/trade-submission`);\n      } catch (err) {}\n    };\n\n    return (\n      <React.Fragment>\n        <ErrorModal error={error} onClear={clearError} />\n        <form className=\"create-form\" onSubmit={tradeSubmissionSubmitHandler}>\n        <h2>Submit Trade Idea:</h2>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <div className=\"form-container\">\n          <div className=\"side-by-side-container\">\n            <h3>Trade Idea: </h3>\n            <label>\n              Hypothesis:\n              <select value={hypothesis} onChange={hypothesisChangeHandler}>\n                {HYPOTHESIS_OPTIONS()}\n              </select>\n            </label>\n            <label>\n              Direction:\n              <select value={direction} onChange={directionChangeHandler}>\n                {DIRECTION_OPTIONS()}\n              </select>\n            </label>\n            <Input\n              id=\"notes\"\n              element=\"textarea\"\n              type=\"text\"\n              rows='5'\n              label=\"Notes:\"\n              validators={[VALIDATOR_REQUIRE()]}\n              onInput={inputHandler}\n            />\n          </div>\n          <div className=\"side-by-side-container\">\n            <h3>Timing: </h3>            \n            <label>\n              Likely Preannounce (Y/N):\n              <input\n                name=\"likelyPreannounce\"\n                type=\"checkbox\"\n                onChange={likelyPreannounceChangeHandler}\n                checked={likelyPreannounce} \n              />\n            </label>\n            <label>\n              Entrance Date:\n              <DatePicker date={entranceDate} onChange={e => setEntranceDate(e.target.value)} />\n            </label>\n          </div>\n          <div className=\"side-by-side-container\">\n            <h3>Price Move Prediction Intervals: </h3>        \n            <Input\n              id=\"predictionIntervalsHighDownside\"\n              element=\"input\"\n              type=\"text\"\n              label=\"-10%+\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n            <Input\n              id=\"predictionIntervalsModerateDownside\"\n              element=\"input\"\n              type=\"text\"\n              label=\"[-4%, -10%)\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n            <Input\n              id=\"predictionIntervalsLowDownside\"\n              element=\"input\"\n              type=\"text\"\n              label=\"(-4%, 0%]\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n            <Input\n              id=\"predictionIntervalsLowUpside\"\n              element=\"input\"\n              type=\"text\"\n              label=\"(0%, 4%)\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n            <Input\n              id=\"predictionIntervalsModerateUpside\"\n              element=\"input\"\n              type=\"text\"\n              label=\"[4%, 10%)\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n            <Input\n              id=\"predictionIntervalsHighUpside\"\n              element=\"input\"\n              type=\"text\"\n              label=\"10%+\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n            </div>\n            <div className=\"side-by-side-container\">\n              <h3>Allocation:</h3>\n            <Input\n              id=\"targetPortfolioWeight\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Target Portfolio Weight:\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n          </div>\n        </div>\n        <div className=\"analysis-form__button\">\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            Submit\n        </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\n\nexport default NewTradeSubmission;","import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport moment from \"moment\";\nimport DatePicker from '../../shared/components/DatePicker';\nimport {\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\n\nimport { HYPOTHESIS_OPTIONS, DIRECTION_OPTIONS } from '../../shared/util/formOptions';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport '../AnalysisForm.css';\n\nconst UpdateTradeSubmission = props => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  \n  const [likelyPreannounce, setLikelyPreannounce] = useState(props.likelyPreannounce);\n  const [hypothesis, setHypothesis] = useState(props.hypothesis);\n  const [direction, setDirection] = useState(props.direction);\n  const [entranceDate, setEntranceDate] = useState(moment(props.entranceDate));\n\n  const likelyPreannounceChangeHandler = event => {\n    setLikelyPreannounce(event.target.checked);\n  };\n\n  const hypothesisChangeHandler = event => {\n    setHypothesis(event.target.value);\n  }\n\n  const directionChangeHandler = event => {\n    setDirection(event.target.value);\n  }\n  const [formState, inputHandler] = useForm(\n    {\n      predictionIntervalsHighDownside: {\n        value: 0,\n        isValid: true\n      },\n      predictionIntervalsModerateDownside: {\n        value: 0,\n        isValid: false\n      },\n      predictionIntervalsLowDownside: {\n        value: 0,\n        isValid: true\n      },\n      predictionIntervalsLowUpside: {\n        value: 0,\n        isValid: true\n      },\n      predictionIntervalsModerateUpside: {\n        value: 0,\n        isValid: true\n      },\n      predictionIntervalsHighUpside: {\n        value: 0,\n        isValid: false\n      },\n      targetPortfolioWeight: {\n        value: 0,\n        isValid: true\n      },\n      notes: {\n        value: 0,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const tradeSubmissionSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/tradeSubmission/${props._id}`,\n        'PATCH',\n        JSON.stringify({\n          \"hypothesis\": hypothesis,\n          \"predictionIntervalsHighDownside\": formState.inputs.predictionIntervalsHighDownside.value,\n          \"predictionIntervalsModerateDownside\": formState.inputs.predictionIntervalsModerateDownside.value,\n          \"predictionIntervalsLowDownside\": formState.inputs.predictionIntervalsLowDownside.value,\n          \"predictionIntervalsLowUpside\": formState.inputs.predictionIntervalsLowUpside.value,\n          \"predictionIntervalsModerateUpside\": formState.inputs.predictionIntervalsModerateUpside.value,\n          \"predictionIntervalsHighUpside\": formState.inputs.predictionIntervalsHighUpside.value,\n          \"direction\": direction,\n          \"targetPortfolioWeight\": formState.inputs.targetPortfolioWeight.value,\n          \"likelyPreannounce\": likelyPreannounce,\n          \"entranceDate\": entranceDate,\n          \"notes\": formState.inputs.notes.value,\n          \"transcript\": transcriptId,\n          \"tradeSubmissionId\": props._id,\n          \"creator\": auth.userId\n        }), {\n          Authorization: 'Bearer ' + auth.token,\n          'Content-Type': 'application/json',\n        });\n        history.push('/');\n        history.push(`/users/${auth.username}/transcripts/${transcriptId}/trade-submission`);\n      } catch (err) {}\n    };\n\n    return (\n      <React.Fragment>\n        <ErrorModal error={error} onClear={clearError} />\n        <form className=\"create-form\" onSubmit={tradeSubmissionSubmitHandler}>\n        <h2>Trade Idea:</h2>        \n        {isLoading && <LoadingSpinner asOverlay />}\n        <div className=\"form-container\">\n        <div className=\"side-by-side-container\">\n          <h3> Submit Trade Idea: </h3>\n          <label>\n            Hypothesis:\n            <select value={hypothesis} onChange={hypothesisChangeHandler}>\n              {HYPOTHESIS_OPTIONS()}\n            </select>\n          </label>\n          <label>\n            Direction:\n            <select value={direction} onChange={directionChangeHandler}>\n              {DIRECTION_OPTIONS()}\n            </select>\n          </label>\n          <Input\n            id=\"targetPortfolioWeight\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Target Portfolio Weight\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid decimal.\"\n            onInput={inputHandler}\n            initialValue={props.targetPortfolioWeight}\n            initialValid={true}\n          />\n          <Input\n          id=\"notes\"\n          element=\"textarea\"\n          type=\"text\"\n          label=\"Notes\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid decimal.\"\n          onInput={inputHandler}\n          initialValue={props.notes}\n          initialValid={true}\n          />\n        </div>\n        <div className=\"side-by-side-container\">\n          <h3>Timing: </h3>            \n          <label>\n            Likely Preannounce (Y/N):\n            <input\n              name=\"likelyPreannounce\"\n              type=\"checkbox\"\n              onChange={likelyPreannounceChangeHandler}\n              checked={likelyPreannounce} \n            />\n          </label>\n          <label>\n            Entrance Date:\n            <DatePicker date={entranceDate} onChange={e => setEntranceDate(e.target.value)} />\n          </label>\n        </div>\n        <div className=\"side-by-side-container\">\n          <h3>Prediction Intervals: </h3>    \n          <Input\n          id=\"predictionIntervalsHighDownside\"\n          element=\"input\"\n          type=\"text\"\n          label=\"-10%+\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid decimal.\"\n          onInput={inputHandler}\n          initialValue={props.predictionIntervals.highDownside}\n          initialValid={true}\n          />\n          <Input\n            id=\"predictionIntervalsModerateDownside\"\n            element=\"input\"\n            type=\"text\"\n            label=\"[-4%, -10%)\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid decimal.\"\n            onInput={inputHandler}\n            initialValue={props.predictionIntervals.moderateDownside}\n            initialValid={true}\n          />\n          <Input\n            id=\"predictionIntervalsLowDownside\"\n            element=\"input\"\n            type=\"text\"\n            label=\"(-4%, 0%]\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid decimal.\"\n            onInput={inputHandler}\n            initialValue={props.predictionIntervals.lowDownside}\n            initialValid={true}\n          />\n          <Input\n            id=\"predictionIntervalsLowUpside\"\n            element=\"input\"\n            type=\"text\"\n            label=\"(0%, 4%)\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid decimal.\"\n            onInput={inputHandler}\n            initialValue={props.predictionIntervals.lowUpside}\n            initialValid={true}\n          />\n          <Input\n            id=\"predictionIntervalsModerateUpside\"\n            element=\"input\"\n            type=\"text\"\n            label=\"[4%, 10%)\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid decimal.\"\n            onInput={inputHandler}\n            initialValue={props.predictionIntervals.moderateUpside}\n            initialValid={true}\n          />\n          <Input\n            id=\"predictionIntervalsHighUpside\"\n            element=\"input\"\n            type=\"text\"\n            label=\"10%+\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid decimal.\"\n            onInput={inputHandler}\n            initialValue={props.predictionIntervals.highUpside}\n            initialValid={true}\n          />\n          </div>\n          <div className=\"side-by-side-container\">\n              <h3>Allocation:</h3>\n            <Input\n              id=\"targetPortfolioWeight\"\n              element=\"input\"\n              type=\"text\"\n              label=\"Target Portfolio Weight:\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n              initialValue={props.targetPortfolioWeight}\n              initialValid={true}\n            />\n          </div>\n        </div>\n        <div className=\"analysis-form__button\">\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            Update\n        </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\n\nexport default UpdateTradeSubmission;","import React from 'react';\n\nimport NewTradeSubmission from './NewTradeSubmission';\nimport '../AnalysisItem.css';\nimport UpdateTradeSubmission from './UpdateTradeSubmission';\n\nconst TradeSubmissionItem = props => {\n\n  if (!props._id) {\n    return (\n      <React.Fragment>\n        <NewTradeSubmission />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <UpdateTradeSubmission {...props}/>\n  );\n\n}\nexport default TradeSubmissionItem;","import React, {useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport TranscriptHome from '../components/TranscriptHome';\nimport TradeSubmissionItem from '../../analysis/TradeSubmission/TradeSubmissionItem';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nconst TranscriptHomeTradeSubmission = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId\n\n  const [loadedTradeSubmission, setLoadedTradeSubmission] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  useEffect(() => {\n    const fetchTradeSubmission = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/tradeSubmission/${auth.username}/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTradeSubmission(responseData.tradeSubmission);\n      } catch (err) {}\n    };\n    fetchTradeSubmission();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n      <div className=\"main-container\">\n      <TranscriptHome />\n        <div className=\"content-container\">\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (<div className=\"center\">\n            <LoadingSpinner />\n          </div>\n          )}\n          {!isLoading && <TradeSubmissionItem {...loadedTradeSubmission} />}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptHomeTradeSubmission;","import React from 'react';\n\nexport const FORMAT_DATE = (date) => {\n  let options = { year: 'numeric', month: 'numeric', day: 'numeric' };\n  return new Date(date).toLocaleDateString([],options);\n}\n\nexport const YEAR_OPTIONS = () => {\n  const currentYear = (new Date(Date.now())).getFullYear()\n  const startYear = currentYear - 2;\n  const endYear = currentYear + 2;\n  let options = [];\n  for (let year = startYear; year < endYear; year++){\n    options.push(year.toString())\n  }\n  return options;\n}\n\nexport const BEAT_MISS_OPTIONS = () => {\n  const beatMissOptions = [];\n  for (let i=0; i<9; i++){\n    beatMissOptions.push(<option value={i}>{i}</option>)\n  }\n  return beatMissOptions;\n}\n\nexport const RAISE_CUT_OPTIONS = () => {\n  const raiseCutOptions = [];\n  for (let i=0; i<4; i++){\n    raiseCutOptions.push(<option value={i}>{i}</option>)\n  }\n  return raiseCutOptions;\n}\n\nexport const SA_RATING_OPTIONS = () => {\n  const options = \n  ['Very Bearish', 'Bearish', 'Neutral', 'Bullish', 'Very Bullish'];\n  return options.map( rating => {\n    return (\n    <option value={rating}>{rating}</option>\n    );\n  });\n}\n\nexport const SA_GRADING_OPTIONS = () => {\n  const options = \n  [\n    'A+', 'A', 'A-',\n    'B+', 'B', 'B-',\n    'C+', 'C', 'C-',\n    'D+', 'D', 'D-',\n    'E+', 'E', 'E-',\n    'F'\n  ];\n  return options.map( grade => {\n    return (\n    <option value={grade}>{grade}</option>\n    );\n  });\n}\n\nexport const HYPOTHESIS_OPTIONS = () => {\n  const options = \n  [\n    'Consensus Decrease on NE',\n    'Consensus Increase on NE',\n    'Cut Guidance on NE',\n    'Raise Guidance on NE'\n  ]\n  return options.map( hypothesis => {\n    return (\n    <option value={hypothesis}>{hypothesis}</option>   \n    );\n  });\n}\n\nexport const DIRECTION_OPTIONS = () => {\n  const options = \n  [\n    'Short',\n    'Long',\n    'Bi-Directional',\n  ]\n  return options.map( direction => {\n    return (\n    <option value={direction}>{direction}</option>   \n    );\n  });\n}","import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst NewTranscriptRating = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState('Unrated');\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const currentPage = window.location.href.split(3000)[1]\n  const history = useHistory();\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/transcriptRatings',\n        'POST', \n        JSON.stringify({\n          \"rating\": rating,\n          \"transcript\": transcriptId,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n      history.push('/');\n      history.push(currentPage);\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <label className=\"transcript-rating__label\">\n            Transcript Rating:\n            <select value={rating} onChange={ratingChangeHandler}>\n              <option value=\"Unrated\">Unrated</option>\n              <option value=\"Empty\">Empty</option>\n              <option value=\"Weak\">Weak</option>\n              <option value=\"(Pre-Report): Short - Tier Two\">(Pre-Report): Short - Tier Two</option>\n              <option value=\"(Pre-Report): Long - Tier Two\">(Pre-Report): Long - Tier Two</option>\n              <option value=\"(Pre-Report): Short - Tier One\">(Pre-Report): Short - Tier One</option>\n              <option value=\"(Pre-Report): Long - Tier One\">(Pre-Report): Long - Tier One</option>\n              <option value=\"(Post-Report): Short - Success\">(Post-Report): Short - Success</option>\n              <option value=\"(Post-Report): Long - Success\">(Post-Report): Long - Success</option>\n              <option value=\"(Post-Report): Short - Misinterpreted\">(Post-Report): Short - Misinterpreted Evidence</option>\n              <option value=\"(Post-Report): Long - Misinterpreted\">(Post-Report): Long - Misinterpreted Evidence</option>\n              <option value=\"(Post-Report): Short - Adverse Reaction\">(Post-Report): Short - Adverse Reaction</option>\n              <option value=\"(Post-Report): Long - Adverse Reaction\">(Post-Report): Long - Adverse Reaction</option>\n            </select>\n          </label>\n        </div>\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <div className=\"transcript-rating-form__button\">\n            <Button type=\"submit\">\n                Update Transcript Rating\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewTranscriptRating;","import React, { useContext, useState } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst UpdateTranscriptRating = props => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState(props.rating);\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/transcriptRatings/${props._id}`,\n        'PATCH', \n        JSON.stringify({\n          \"rating\": rating,\n          \"transcriptRatingId\": props._id,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n        <div className=\"transcript-ratings-side-by-side-container\">\n        <label className=\"transcript-rating__label\">\n          Transcript Rating:\n          <select value={rating} onChange={ratingChangeHandler}>\n            <option value=\"Unrated\">Unrated</option>\n            <option value=\"Empty\">Empty</option>\n            <option value=\"Weak\">Weak</option>\n            <option value=\"(Pre-Report): Short - Tier Two\">(Pre-Report): Short - Tier Two</option>\n            <option value=\"(Pre-Report): Long - Tier Two\">(Pre-Report): Long - Tier Two</option>\n            <option value=\"(Pre-Report): Short - Tier One\">(Pre-Report): Short - Tier One</option>\n            <option value=\"(Pre-Report): Long - Tier One\">(Pre-Report): Long - Tier One</option>\n            <option value=\"(Post-Report): Short - Success\">(Post-Report): Short - Success</option>\n            <option value=\"(Post-Report): Long - Success\">(Post-Report): Long - Success</option>\n            <option value=\"(Post-Report): Short - Misinterpreted\">(Post-Report): Short - Misinterpreted</option>\n            <option value=\"(Post-Report): Long - Misinterpreted\">(Post-Report): Long - Misinterpreted</option>\n            <option value=\"(Post-Report): Short - Adverse Reaction\">(Post-Report): Short - Adverse Reaction</option>\n            <option value=\"(Post-Report): Long - Adverse Reaction\">(Post-Report): Long - Adverse Reaction</option>\n          </select>\n        </label>\n        </div>\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <div className=\"transcript-rating-form__button\">\n            <Button type=\"submit\">\n                Update Transcript Rating\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateTranscriptRating;","import React, { useState, useEffect, useContext} from 'react';\nimport { useParams } from 'react-router-dom'\n\nimport NewTranscriptRating from './NewTranscriptRating';\nimport UpdateTranscriptRating from './UpdateTranscriptRating';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport './RatingForm.css';\n\nconst TranscriptRatingForm = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const [ loadedTranscriptRating, setLoadedTranscriptRating ] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  useEffect(() => {\n    const fetchTranscriptRating = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcriptRatings/${auth.username}/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscriptRating(responseData.transcriptRating);\n      } catch (err) {}\n    };\n    fetchTranscriptRating();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    {isLoading && (<div className=\"center\">\n      <LoadingSpinner />\n    </div>\n    )}\n    <header className=\"rating-header\">\n    {!isLoading && loadedTranscriptRating && !loadedTranscriptRating._id && (\n    <NewTranscriptRating />)}\n    {!isLoading && loadedTranscriptRating && loadedTranscriptRating._id && (\n    <UpdateTranscriptRating {...loadedTranscriptRating} />)}\n    </header>\n  </React.Fragment>\n  );\n}\n\nexport default TranscriptRatingForm;","import React, { useContext, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './TranscriptTitle.css';\nimport TranscriptRatingForm from '../../ratings/components/TranscriptRatingForm';\n\nconst TranscriptTitle = () => {\n  const auth = useContext(AuthContext);\n  const [ loadedTranscript, setLoadedTranscript] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const transcriptId = useParams().transcriptId;\n  const pageName = () => {\n    const currentUrl = window.location.href;\n    if (currentUrl.includes('exchanges')) {\n      return 'Highly-Rated QA'\n    } else if (currentUrl.includes('opening-statements')) {\n      return 'Highly-Rated OS'\n    } else if (currentUrl.includes('full-transcript')) {\n      return 'Full Transcript'\n    } else if (currentUrl.includes('primary-evidence')) {\n      return 'Upcoming Trades'\n    } else if (currentUrl.includes('guidance-versus-consensus')) {\n      return 'Guidance vs. Consensus'\n    } else if (currentUrl.includes('past-events')) {\n      return 'Past Events'\n    } else if (currentUrl.includes('tendencies')) {\n      return 'Tendencies'\n    } else if (currentUrl.includes('sentiment')) {\n      return 'Sentiment'\n    } else if (currentUrl.includes('trade-submission')) {\n      return 'Trade Submission'\n    } else if (currentUrl.includes('reaction-evaluation')) {\n      return 'Reaction Evaluation'\n    }\n  }\n\n  useEffect(() => {\n    const fetchTranscript = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcripts/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscript(responseData.transcript);\n      } catch (err) {}\n    };\n    fetchTranscript();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (<div className=\"center\">\n        <LoadingSpinner />\n      </div>\n      )}\n      {!isLoading && loadedTranscript && (\n        <header className=\"transcript-title\">\n          <h2>{loadedTranscript.ticker.tickerText} {loadedTranscript.fiscalQuarter} {loadedTranscript.fiscalYear}: {pageName()}</h2>\n        </header>)}\n        <TranscriptRatingForm />\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptTitle;","import React from 'react';\n\nimport './TranscriptHeader.css';\n\nconst TranscriptHeader = props => {\n  return (\n    <header className=\"transcript-header\">\n      {props.children}\n    </header>\n  );\n};\n\nexport default TranscriptHeader","import React, { useContext } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './TranscriptNavLinks.css';\n\nconst TranscriptNavLinks = props => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  return (\n    <ul className=\"transcript-nav-links\">\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/exchanges`} exact>QA</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/opening-statements`} exact>OS</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/full-transcript`} exact>Full Transcript</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/guidance-versus-consensus`} exact>Guidance vs. Consensus</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/past-events`}  exact>Past Events</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/tendencies`}  exact>Tendencies</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/sentiment`}  exact>Sentiment</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/trade-submission`}  exact>Trade Submission</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/reaction-evaluation`}  exact>Reaction Evaluation</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default TranscriptNavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './TranscriptDropdown.css';\n\nconst TranscriptDropdown = props => {\n  const content = (\n    <aside className=\"transcript-dropdown\">{props.children}</aside>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('dropdown-hook'));\n};\n\nexport default TranscriptDropdown;","import React, { useState } from 'react';\n\nimport TranscriptHeader from './TranscriptHeader';\nimport TranscriptNavLinks from './TranscriptNavLinks';\nimport TranscriptDropdown from './TranscriptDropdown';\nimport Backdrop from '../../shared/components/UIElements/Backdrop';\nimport './TranscriptNavigation.css';\n\nconst TranscriptNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  \n  const openDrawer = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawer = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawer} />}\n      {drawerIsOpen &&\n      <TranscriptDropdown>\n        <nav className=\"transcript-navigation__drawer-nav\">\n          <TranscriptNavLinks />\n        </nav>\n      </TranscriptDropdown>}\n      <TranscriptHeader>\n        <button className=\"transcript-navigation__menu-btn\" onClick={openDrawer}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <nav className=\"transcript-navigation__header-nav\">\n          <TranscriptNavLinks />\n        </nav>\n      </TranscriptHeader>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptNavigation;","import React from 'react';\n\nimport TranscriptTitle from './TranscriptTitle';\nimport TranscriptNavigation from './TranscriptNavigation';\nimport './TranscriptHome.css';\n\nconst TranscriptHome = () => {\n\n  return (\n    <React.Fragment>\n      <div className=\"transcript-home-title-container\">\n        <TranscriptTitle />\n        <TranscriptNavigation />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptHome;","import React, { useState } from \"react\";\nimport { SingleDatePicker } from \"react-dates\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\n\nexport default function DatePicker({ date, onChange }) {\n  const [focused, setFocused] = useState(false);\n\n  return (\n    <SingleDatePicker\n      numberOfMonths={window.innerWidth < 600 ? 1 : 2}\n      onDateChange={date => onChange({ target: { value: date } })}\n      onFocusChange={({ focused }) => setFocused(focused)}\n      focused={focused}\n      date={date}\n      displayFormat=\"YYYY-MM-DD\"\n      isDayBlocked={m => m.day() === 6 || m.day() === 0}\n      hideKeyboardShortcutsPanel\n      // withPortal\n      withFullScreenPortal={window.innerWidth < 400}\n    />\n  );\n}\n"],"sourceRoot":""}