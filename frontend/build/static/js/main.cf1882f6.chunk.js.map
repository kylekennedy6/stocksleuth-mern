{"version":3,"sources":["shared/context/auth-context.js","shared/util/validators.js","shared/components/UIElements/LoadingSpinner.js","shared/components/FormElements/Button.js","shared/components/UIElements/Backdrop.js","shared/components/FormElements/Input.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Card.js","shared/hooks/form-hook.js","shared/components/Navigation/logo.png","shared/hooks/auth-hook.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","username","token","login","logout","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","length","test","LoadingSpinner","props","className","asOverlay","Button","href","size","inverse","danger","children","to","exact","onClick","disabled","Backdrop","ReactDOM","createPortal","document","getElementById","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","clearError","ModalOverlay","content","style","headerClass","header","onSubmit","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","Card","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","module","exports","logoutTimer","Auth","auth","useContext","password","inputHandler","authSubmitHandler","process","JSON","stringify","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","src","logo","alt","UserHomeUnread","React","lazy","UserHomeUpcomingTrades","UserHomeTierOne","UserHomeTierTwo","UserHomeArchives","TranscriptHomeExchanges","TranscriptHomeOpeningStatements","TranscriptHomeFullTranscript","TranscriptHomePrimaryEvidence","TranscriptHomeGuidanceVersusConsensus","TranscriptHomePastEvents","TranscriptHomeReactionEvaluation","TranscriptHomeSentiment","TranscriptHomeTendencies","TranscriptHomeTradeSubmission","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","setUsername","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","fallback","render"],"mappings":"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","file":"static/js/main.cf1882f6.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  username: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n        \n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n      }\n      setIsLoading(false);\n    }, \n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n return { isLoading, error, sendRequest, clearError };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form className=\"modal-form\"\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","module.exports = __webpack_public_path__ + \"static/media/logo.0ab9eef2.png\";","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const [username, setUsername] = useState(false);\n\n  const login = useCallback((uid, username, token, expirationDate) => {\n    setUserId(uid);\n    setUsername(username)\n    setToken(token);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60 * 12);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData', \n      JSON.stringify({\n        userId: uid, \n        username: username, \n        token: token, \n        expiration: tokenExpirationDate.toISOString() \n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setUserId(null);\n    setTokenExpirationDate(null);\n    setUsername(null);\n    setToken(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime)\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData && \n      storedData.token && \n      new Date(storedData.expiration) > new Date()\n     ) {\n      login(storedData.userId, storedData.username, storedData.token, new Date(storedData.expiration));\n    } \n  }, [login]);\n\n  return { token, login, logout, userId, username };\n};","import React, { useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {  \n  VALIDATOR_MINLENGTH \n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\n const Auth = () => {\n   const auth = useContext(AuthContext);\n   const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n   const [formState, inputHandler] = useForm(\n     {\n      username: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n   );\n\n   const authSubmitHandler = async event => {\n     event.preventDefault();\n     \n     try {\n       const responseData = await sendRequest(\n         process.env.REACT_APP_BACKEND_URL + '/users/login',\n         'POST',\n         JSON.stringify({\n          username: formState.inputs.username.value,\n          password: formState.inputs.password.value\n         }),\n         {\n           'Content-Type': 'application/json'\n         }\n       );\n        auth.login(responseData.userId, responseData.username, responseData.token);\n      } catch (err) {}\n   }\n   return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          <Input\n            element=\"input\" \n            id=\"username\" \n            type=\"username\" \n            label=\"Username\" \n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid email username.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\" \n            id=\"password\" \n            type=\"password\" \n            label=\"Password\" \n            validators={[VALIDATOR_MINLENGTH(8)]}\n            errorText=\"Please enter a valid password, at least 8 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>LOGIN</Button>\n        </form>\n      </Card>\n    </React.Fragment>\n   );\n };\n\n export default Auth;","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">\n    {props.children}\n  </header>\n};\n\nexport default MainHeader;","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n  return (\n    <ul className=\"nav-links\">\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/users/${auth.username}/upcoming-trades`} exact>\n            HOME\n          </NavLink>\n        </li>\n       )}\n      {!auth.isLoggedIn && (\n      <li>\n        <NavLink to=\"/login\">\n          LOGIN\n        </NavLink>\n      </li>\n      )}\n      {auth.isLoggedIn && (\n      <li>\n       <button onClick={auth.logout}>LOGOUT</button> \n      </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition \n      in={props.show} \n      timeout={200} \n      classNames=\"slide-in-left\" \n      mountOnEnter \n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n\n};\n\nexport default SideDrawer;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport logo from './logo.png';\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <Link to=\"/\">\n        <img className=\"main-navigation__logo\" src={logo} alt=\"Logo\" />\n        </Link>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n      </React.Fragment>\n  )\n};\n\nexport default MainNavigation;","import React, { Suspense } from 'react';\nimport { \n  BrowserRouter as Router, \n  Route, \n  Redirect, \n  Switch \n} from 'react-router-dom';\n\nimport Auth from '../src/user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext} from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst UserHomeUnread = React.lazy(() => import ('./user/pages/UserHomeUnread'));\nconst UserHomeUpcomingTrades = React.lazy(() => import ('./user/pages/UserHomeUpcomingTrades'));\nconst UserHomeTierOne = React.lazy(() => import ('./user/pages/UserHomeTierOne'));\nconst UserHomeTierTwo = React.lazy(() => import ('./user/pages/UserHomeTierTwo'));\nconst UserHomeArchives = React.lazy(() => import ('./user/pages/UserHomeArchives'));\nconst TranscriptHomeExchanges = React.lazy(() => import ('./transcripts/pages/TranscriptHomeExchanges'));\nconst TranscriptHomeOpeningStatements = React.lazy(() => import ('./transcripts/pages/TranscriptHomeOpeningStatements'));\nconst TranscriptHomeFullTranscript = React.lazy(() => import ('./transcripts/pages/TranscriptHomeFullTranscript'));\nconst TranscriptHomePrimaryEvidence = React.lazy(() => import ('./transcripts/pages/TranscriptHomePrimaryEvidence'));\nconst TranscriptHomeGuidanceVersusConsensus = React.lazy(() => import ('./transcripts/pages/TranscriptHomeGuidanceVersusConsensus'));\nconst TranscriptHomePastEvents = React.lazy(() => import ('./transcripts/pages/TranscriptHomePastEvents'));\nconst TranscriptHomeReactionEvaluation = React.lazy(() => import ('./transcripts/pages/TranscriptHomeReactionEvaluation'));\nconst TranscriptHomeSentiment = React.lazy(() => import ('./transcripts/pages/TranscriptHomeSentiment'));\nconst TranscriptHomeTendencies = React.lazy(() => import ('./transcripts/pages/TranscriptHomeTendencies'));\nconst TranscriptHomeTradeSubmission = React.lazy(() => import ('./transcripts/pages/TranscriptHomeTradeSubmission'));\n\nconst App = () => {\n  const { token, login, logout, userId, username } = useAuth();\n  \n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path={`/users/${username}/unread`} exact>\n          <UserHomeUnread />\n        </Route>\n        <Route path={`/users/${username}/upcoming-trades`} exact>\n          <UserHomeUpcomingTrades/>\n        </Route>\n        <Route path={`/users/${username}/tier-one`} exact>\n          <UserHomeTierOne/>\n        </Route>\n        <Route path={`/users/${username}/tier-two`} exact>\n          <UserHomeTierTwo/>\n        </Route>\n        <Route path={`/users/${username}/archives`} exact>\n          <UserHomeArchives/>\n        </Route>\n        <Route path={`/users/${username}/transcripts/:transcriptId/exchanges`} exact>\n          <TranscriptHomeExchanges />\n        </Route>\n        <Route path={`/users/${username}/transcripts/:transcriptId/opening-statements`} exact>\n          <TranscriptHomeOpeningStatements />\n        </Route>\n        <Route path={`/users/${username}/transcripts/:transcriptId/full-transcript`} exact>\n          <TranscriptHomeFullTranscript />\n        </Route>\n        <Route path={`/users/${username}/transcripts/:transcriptId/primary-evidence`} exact>\n          <TranscriptHomePrimaryEvidence />\n        </Route>\n        <Route path={`/users/${username}/transcripts/:transcriptId/guidance-versus-consensus`} exact>\n          <TranscriptHomeGuidanceVersusConsensus />\n        </Route>\n        <Route path={`/users/${username}/transcripts/:transcriptId/past-events`} exact>\n          <TranscriptHomePastEvents />\n        </Route>\n        <Route path={`/users/${username}/transcripts/:transcriptId/reaction-evaluation`} exact>\n          <TranscriptHomeReactionEvaluation />\n        </Route>\n        <Route path={`/users/${username}/transcripts/:transcriptId/sentiment`} exact>\n          <TranscriptHomeSentiment />\n        </Route>\n        <Route path={`/users/${username}/transcripts/:transcriptId/tendencies`} exact>\n          <TranscriptHomeTendencies />\n        </Route>\n        <Route path={`/users/${username}/transcripts/:transcriptId/trade-submission`} exact>\n          <TranscriptHomeTradeSubmission />\n        </Route>\n        <Redirect to={`/users/${username}/unread`} exact />\n      </Switch>\n\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/login\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/login\" />\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider \n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        username: username,\n        login: login, \n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense \n          fallback={\n            <div className=\"center\">\n              <LoadingSpinner />\n              </div>\n            }\n            >\n              {routes}\n              </Suspense>\n            </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}