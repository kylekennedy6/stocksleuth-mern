{"version":3,"sources":["analysis/Sentiment/NewSentiment.js","analysis/Sentiment/UpdateSentiment.js","analysis/Sentiment/SentimentItem.js","transcripts/pages/TranscriptHomeSentiment.js","shared/util/formOptions.js","ratings/components/NewTranscriptRating.js","ratings/components/UpdateTranscriptRating.js","ratings/components/TranscriptRatingForm.js","transcripts/components/TranscriptTitle.js","transcripts/components/TranscriptHeader.js","transcripts/components/TranscriptNavLinks.js","transcripts/components/TranscriptDropdown.js","transcripts/components/TranscriptNavigation.js","transcripts/components/TranscriptHome.js"],"names":["NewSentiment","auth","useContext","AuthContext","transcriptId","useParams","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedTranscript","setLoadedTranscript","useEffect","a","process","Authorization","token","responseData","transcript","fetchTranscript","username","quantRating","setQuantRating","sellSideRating","setSellSideRating","revisionsRating","setRevisionsRating","valueRating","setValueRating","growthRating","setGrowthRating","profitabilityRating","setProfitabilityRating","momentumRating","setMomentumRating","useForm","shortFloat","value","isValid","shortSharesChangePastMonth","ownedByInsiders","formState","inputHandler","history","useHistory","sentimentSubmitHandler","event","preventDefault","JSON","stringify","inputs","userId","push","Fragment","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","href","ticker","tickerText","onChange","target","SA_RATING_OPTIONS","SA_GRADING_OPTIONS","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","Button","disabled","UpdateSentiment","props","_id","initialValue","initialValid","SentimentItem","TranscriptHomeSentiment","loadedSentiment","setLoadedSentiment","sentiment","fetchSentiment","TranscriptHome","FORMAT_DATE","date","Date","toLocaleDateString","year","month","day","YEAR_OPTIONS","currentYear","now","getFullYear","endYear","options","toString","BEAT_MISS_OPTIONS","beatMissOptions","i","RAISE_CUT_OPTIONS","raiseCutOptions","map","rating","grade","HYPOTHESIS_OPTIONS","hypothesis","DIRECTION_OPTIONS","direction","NewTranscriptRating","setRating","currentPage","window","location","split","ratingSubmitHandler","as","Overlay","UpdateTranscriptRating","TranscriptRatingForm","loadedTranscriptRating","setLoadedTranscriptRating","transcriptRating","fetchTranscriptRating","TranscriptTitle","fiscalQuarter","fiscalYear","currentUrl","includes","pageName","TranscriptHeader","children","TranscriptNavLinks","to","exact","TranscriptDropdown","content","ReactDOM","createPortal","document","getElementById","TranscriptNavigation","drawerIsOpen","setDrawerIsOpen","Backdrop","onClick"],"mappings":"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","file":"static/js/9.07cda67e.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { SA_GRADING_OPTIONS, SA_RATING_OPTIONS } from '../../shared/util/formOptions';\nimport {\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport '../AnalysisItem.css';\n\nconst NewSentiment = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();  \n  const [ loadedTranscript, setLoadedTranscript] = useState();\n\n  useEffect(() => {\n    const fetchTranscript = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcripts/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscript(responseData.transcript);\n      } catch (err) {}\n    };\n    fetchTranscript();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  const [quantRating, setQuantRating] = useState('Neutral')\n  const [sellSideRating, setSellSideRating] = useState('Neutral');\n  const [revisionsRating, setRevisionsRating] = useState('C');\n  const [valueRating, setValueRating] = useState('C');\n  const [growthRating, setGrowthRating] = useState('C');\n  const [profitabilityRating, setProfitabilityRating] = useState('C');\n  const [momentumRating, setMomentumRating] = useState('C');\n\n  const quantRatingChangeHandler = event => {\n    setQuantRating(event.target.value);\n  };\n  const sellSideRatingChangeHandler = event => {\n    setSellSideRating(event.target.value);\n  };\n\n  const revisionsRatingChangeHandler = event => {\n    setRevisionsRating(event.target.value);\n  };\n\n  const valueRatingChangeHandler = event => {\n    setValueRating(event.target.value);\n  };\n\n  const growthRatingChangeHandler = event => {\n    setGrowthRating(event.target.value);\n  };\n\n  const profitabilityRatingChangeHandler = event => {\n    setProfitabilityRating(event.target.value);\n  };\n\n  const momentumRatingChangeHandler = event => {\n    setMomentumRating(event.target.value);\n  };\n\n  const [formState, inputHandler] = useForm(\n    {\n      shortFloat: {\n        value: 0.00,\n        isValid: true\n      },\n      shortSharesChangePastMonth: {\n        value: 0.00,\n        isValid: true\n      },\n      ownedByInsiders: {\n        value: 0.00,\n        isValid: true\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const sentimentSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/sentiment',\n        'POST',\n        JSON.stringify({\n          \"shortFloat\": formState.inputs.shortFloat.value,\n          \"shortSharesChangePastMonth\": formState.inputs.shortSharesChangePastMonth.value,\n          \"quantRating\": quantRating,\n          \"sellSideRating\": sellSideRating,\n          \"revisionsRating\": revisionsRating,\n          \"valueRating\": valueRating,\n          \"growthRating\": growthRating,\n          \"profitabilityRating\": profitabilityRating,\n          \"momentumRating\": momentumRating,\n          \"ownedByInsiders\": formState.inputs.ownedByInsiders.value,\n          \"transcript\": transcriptId,\n          \"creator\": auth.userId\n        }), {\n          Authorization: 'Bearer ' + auth.token,\n          'Content-Type': 'application/json',\n        });\n        history.push('/');\n        history.push(`/users/${auth.username}/transcripts/${transcriptId}/sentiment`);\n      } catch (err) {}\n    };\n\n\n    return (\n      <React.Fragment>\n        <ErrorModal error={error} onClear={clearError} />\n        <form className=\"create-form\" onSubmit={sentimentSubmitHandler}>\n          <h2>Add Sentiment Data:</h2>\n          {isLoading && <LoadingSpinner asOverlay />}\n          {!isLoading && loadedTranscript && (<React.Fragment>\n          <h4 className=\"sa-link\"><a href={`https://seekingalpha.com/symbol/${loadedTranscript.ticker.tickerText}/ratings/quant-ratings`}>SeekingAlpha Ratings and Grades</a></h4>\n          <h4 className=\"sa-link\"><a href={`https://finance.yahoo.com/quote/${loadedTranscript.ticker.tickerText}/key-statistics?p=${loadedTranscript.ticker.tickerText}`}>YahooFinance Short Float/Insider Info</a></h4>\n        <div className=\"form-container\">\n          <div className=\"side-by-side-container\">\n            <h3>Ratings: </h3>\n            <label>\n              Quant Rating:\n              <select value={quantRating} onChange={quantRatingChangeHandler}>\n                {SA_RATING_OPTIONS()}\n              </select>\n            </label>\n            <label>\n              Sell-Side Rating:\n              <select value={sellSideRating} onChange={sellSideRatingChangeHandler}>\n                {SA_RATING_OPTIONS()}\n              </select>\n            </label>\n            </div>\n            <div className=\"side-by-side-container\">\n            <h3>Grades: </h3>\n            <label>\n              Revisions Rating:\n              <select value={revisionsRating} onChange={revisionsRatingChangeHandler}>\n                {SA_GRADING_OPTIONS()}\n              </select>\n            </label>\n            <label>\n              Value Rating:\n              <select value={valueRating} onChange={valueRatingChangeHandler}>\n                {SA_GRADING_OPTIONS()}\n              </select>\n            </label>\n            <label>\n              Growth Rating:\n              <select value={growthRating} onChange={growthRatingChangeHandler}>\n                {SA_GRADING_OPTIONS()}\n              </select>\n            </label>\n            <label>\n              Profitability Rating:\n              <select value={profitabilityRating} onChange={profitabilityRatingChangeHandler}>\n                {SA_GRADING_OPTIONS()}\n              </select>\n            </label>\n            <label>\n              Momentum Rating:\n              <select value={momentumRating} onChange={momentumRatingChangeHandler}>\n                {SA_GRADING_OPTIONS()}\n              </select>\n            </label>\n          </div>\n          <div className=\"side-by-side-container\">\n            <h3>Other:</h3>            \n            <Input\n              id=\"shortFloat\"\n              element=\"input\"\n              type=\"number\"\n              label=\"Short Float (%):\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n            <Input\n              id=\"shortSharesChangePastMonth\"\n              element=\"input\"\n              type=\"number\"\n              label=\"Shares Sold Short Change Past Month (%):\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />          \n            <Input\n              id=\"ownedByInsiders\"\n              element=\"input\"\n              type=\"number\"\n              label=\"Owned By Insiders (%):\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n            />\n          </div>                                                              \n        </div>\n        <div className=\"analysis-form__button\">\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            Submit\n        </Button>\n        </div>\n        </React.Fragment>)}\n      </form>\n    </React.Fragment>\n  );\n};\n\n\nexport default NewSentiment;","import React, { useContext, useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport { SA_RATING_OPTIONS, SA_GRADING_OPTIONS } from '../../shared/util/formOptions';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport '../AnalysisForm.css';\n\nconst UpdateSentiment = props => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const [ loadedTranscript, setLoadedTranscript] = useState();\n  \n  useEffect(() => {\n    const fetchTranscript = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcripts/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscript(responseData.transcript);\n      } catch (err) {}\n    };\n    fetchTranscript();\n  }, [sendRequest, auth.token, auth.username, transcriptId]);\n\n  const [quantRating, setQuantRating] = useState(props.quantRating);\n  const [sellSideRating, setSellSideRating] = useState(props.sellSideRating);\n  const [revisionsRating, setRevisionsRating] = useState(props.revisionsRating);\n  const [valueRating, setValueRating] = useState(props.valueRating);\n  const [growthRating, setGrowthRating] = useState(props.growthRating);\n  const [profitabilityRating, setProfitabilityRating] = useState(props.profitabilityRating);\n  const [momentumRating, setMomentumRating] = useState(props.momentumRating);\n\n  const quantRatingChangeHandler = event => {\n    setQuantRating(event.target.value);\n  };\n\n  const sellSideRatingChangeHandler = event => {\n    setSellSideRating(event.target.value);\n  };\n\n  const revisionsRatingChangeHandler = event => {\n    setRevisionsRating(event.target.value);\n  };\n\n  const valueRatingChangeHandler = event => {\n    setValueRating(event.target.value);\n  };\n\n  const growthRatingChangeHandler = event => {\n    setGrowthRating(event.target.value);\n  };\n\n  const profitabilityRatingChangeHandler = event => {\n    setProfitabilityRating(event.target.value);\n  };\n\n  const momentumRatingChangeHandler = event => {\n    setMomentumRating(event.target.value);\n  };\n  \n  const [formState, inputHandler] = useForm(\n    {\n      shortFloat: {\n        value: 0,\n        isValid: true\n      },\n      shortSharesChangePastMonth: {\n        value: 0,\n        isValid: true\n      },\n      ownedByInsiders: {\n        value: 0,\n        isValid: true\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const sentimentSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/sentiment/${props._id}`,\n        'PATCH',\n        JSON.stringify({\n          \"shortFloat\": formState.inputs.shortFloat.value,\n          \"shortSharesChangePastMonth\": formState.inputs.shortSharesChangePastMonth.value,\n          \"quantRating\": quantRating,\n          \"sellSideRating\": sellSideRating,\n          \"revisionsRating\": revisionsRating,\n          \"valueRating\": valueRating,\n          \"growthRating\": growthRating,\n          \"profitabilityRating\": profitabilityRating,\n          \"momentumRating\": momentumRating,\n          \"ownedByInsiders\": formState.inputs.ownedByInsiders.value,\n          \"transcript\": transcriptId,\n          \"sentimentId\": props._id,\n          \"creator\": auth.userId\n        }), {\n          Authorization: 'Bearer ' + auth.token,\n          'Content-Type': 'application/json',\n        });\n        history.push('/');\n        history.push(`/users/${auth.username}/transcripts/${transcriptId}/sentiment`);\n      } catch (err) {}\n    };\n\n    return (\n      <React.Fragment>\n        <ErrorModal error={error} onClear={clearError} />\n        <form className=\"create-form\" onSubmit={sentimentSubmitHandler}>\n          <h2>Sentiment Data:</h2>\n          {isLoading && <LoadingSpinner asOverlay />}\n          {!isLoading && loadedTranscript && (<React.Fragment>\n          <h4 className=\"sa-link\"><a href={`https://seekingalpha.com/symbol/${loadedTranscript.ticker.tickerText}/ratings/quant-ratings`}>SeekingAlpha Ratings and Grades</a></h4>\n          <h4 className=\"sa-link\"><a href={`https://finance.yahoo.com/quote/${loadedTranscript.ticker.tickerText}/key-statistics?p=${loadedTranscript.ticker.tickerText}`}>YahooFinance Short Float/Insider Info</a></h4>\n        <div className=\"form-container\">\n          <div className=\"side-by-side-container\">\n          <h3>Ratings: </h3>\n            <label>\n              Quant Rating:\n              <select value={quantRating} onChange={quantRatingChangeHandler}>\n                {SA_RATING_OPTIONS()}\n              </select>\n            </label>\n            <label>\n              Sell-Side Rating:\n              <select value={sellSideRating} onChange={sellSideRatingChangeHandler}>\n                {SA_RATING_OPTIONS()}\n              </select>\n            </label>\n            </div>\n            <div className=\"side-by-side-container\">\n            <h3>Grades: </h3>\n            <label>\n              Revisions Rating:\n              <select value={revisionsRating} onChange={revisionsRatingChangeHandler}>\n                {SA_GRADING_OPTIONS()}\n              </select>\n            </label>\n            <label>\n              Value Rating:\n              <select value={valueRating} onChange={valueRatingChangeHandler}>\n                {SA_GRADING_OPTIONS()}\n              </select>\n            </label>\n            <label>\n              Growth Rating:\n              <select value={growthRating} onChange={growthRatingChangeHandler}>\n                {SA_GRADING_OPTIONS()}\n              </select>\n            </label>\n            <label>\n              Profitability Rating:\n              <select value={profitabilityRating} onChange={profitabilityRatingChangeHandler}>\n                {SA_GRADING_OPTIONS()}\n              </select>\n            </label>\n            <label>\n              Momentum Rating:\n              <select value={momentumRating} onChange={momentumRatingChangeHandler}>\n                {SA_GRADING_OPTIONS()}\n              </select>\n            </label>\n          </div>\n          <div className=\"side-by-side-container\">\n            <h3>Other:</h3>            \n            <Input\n              id=\"shortFloat\"\n              element=\"input\"\n              type=\"number\"\n              label=\"Short Float (%):\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n              initialValue={props.shortFloat}\n              initialValid={true}\n            />\n            <Input\n              id=\"shortSharesChangePastMonth\"\n              element=\"input\"\n              type=\"number\"\n              label=\"Shares Sold Short Change Past Month (%):\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n              initialValue={props.shortSharesChangePastMonth}\n              initialValid={true}\n            />          \n            <Input\n              id=\"ownedByInsiders\"\n              element=\"input\"\n              type=\"number\"\n              label=\"Owned By Insiders (%):\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a valid decimal.\"\n              onInput={inputHandler}\n              initialValue={props.ownedByInsiders}\n              initialValid={true}\n            /> \n          </div>                                                   \n        </div>\n        <div className=\"analysis-form__button\">\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            Update\n        </Button>\n        </div>\n        </React.Fragment>)}\n      </form>\n    </React.Fragment>\n  );\n};\n\n\nexport default UpdateSentiment;","import React from 'react';\n\nimport NewSentiment from './NewSentiment';\nimport '../AnalysisItem.css';\nimport UpdateSentiment from './UpdateSentiment';\n\nconst SentimentItem = props => {\n  if (!props._id) {\n    return (\n      <React.Fragment>\n        <NewSentiment />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <UpdateSentiment {...props}/>\n  );\n\n}\nexport default SentimentItem;","import React, {useEffect, useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport TranscriptHome from '../components/TranscriptHome';\nimport SentimentItem from '../../analysis/Sentiment/SentimentItem';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nconst TranscriptHomeSentiment = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId\n\n  const [loadedSentiment, setLoadedSentiment] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  useEffect(() => {\n    const fetchSentiment = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/sentiment/${auth.username}/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedSentiment(responseData.sentiment);\n      } catch (err) {}\n    };\n    fetchSentiment();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n      <div className=\"main-container\">\n        <TranscriptHome />\n        <div className=\"content-container\">\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (<div className=\"center\">\n            <LoadingSpinner />\n          </div>\n          )}\n          {!isLoading && <SentimentItem {...loadedSentiment} />}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptHomeSentiment;","import React from 'react';\n\nexport const FORMAT_DATE = (date) => {\n  let options = { year: 'numeric', month: 'numeric', day: 'numeric' };\n  return new Date(date).toLocaleDateString([],options);\n}\n\nexport const YEAR_OPTIONS = () => {\n  const currentYear = (new Date(Date.now())).getFullYear()\n  const startYear = currentYear - 2;\n  const endYear = currentYear + 2;\n  let options = [];\n  for (let year = startYear; year < endYear; year++){\n    options.push(year.toString())\n  }\n  return options;\n}\n\nexport const BEAT_MISS_OPTIONS = () => {\n  const beatMissOptions = [];\n  for (let i=0; i<9; i++){\n    beatMissOptions.push(<option value={i}>{i}</option>)\n  }\n  return beatMissOptions;\n}\n\nexport const RAISE_CUT_OPTIONS = () => {\n  const raiseCutOptions = [];\n  for (let i=0; i<4; i++){\n    raiseCutOptions.push(<option value={i}>{i}</option>)\n  }\n  return raiseCutOptions;\n}\n\nexport const SA_RATING_OPTIONS = () => {\n  const options = \n  ['Very Bearish', 'Bearish', 'Neutral', 'Bullish', 'Very Bullish'];\n  return options.map( rating => {\n    return (\n    <option value={rating}>{rating}</option>\n    );\n  });\n}\n\nexport const SA_GRADING_OPTIONS = () => {\n  const options = \n  [\n    'A+', 'A', 'A-',\n    'B+', 'B', 'B-',\n    'C+', 'C', 'C-',\n    'D+', 'D', 'D-',\n    'E+', 'E', 'E-',\n    'F'\n  ];\n  return options.map( grade => {\n    return (\n    <option value={grade}>{grade}</option>\n    );\n  });\n}\n\nexport const HYPOTHESIS_OPTIONS = () => {\n  const options = \n  [\n    'Consensus Decrease on NE',\n    'Consensus Increase on NE',\n    'Cut Guidance on NE',\n    'Raise Guidance on NE'\n  ]\n  return options.map( hypothesis => {\n    return (\n    <option value={hypothesis}>{hypothesis}</option>   \n    );\n  });\n}\n\nexport const DIRECTION_OPTIONS = () => {\n  const options = \n  [\n    'Short',\n    'Long',\n    'Bi-Directional',\n  ]\n  return options.map( direction => {\n    return (\n    <option value={direction}>{direction}</option>   \n    );\n  });\n}","import React, { useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst NewTranscriptRating = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState('Unrated');\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const currentPage = window.location.href.split(3000)[1]\n  const history = useHistory();\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/transcriptRatings',\n        'POST', \n        JSON.stringify({\n          \"rating\": rating,\n          \"transcript\": transcriptId,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n      history.push('/');\n      history.push(currentPage);\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <label className=\"transcript-rating__label\">\n            Transcript Rating:\n            <select value={rating} onChange={ratingChangeHandler}>\n              <option value=\"Unrated\">Unrated</option>\n              <option value=\"Empty\">Empty</option>\n              <option value=\"Weak\">Weak</option>\n              <option value=\"(Pre-Report): Short - Tier Two\">(Pre-Report): Short - Tier Two</option>\n              <option value=\"(Pre-Report): Long - Tier Two\">(Pre-Report): Long - Tier Two</option>\n              <option value=\"(Pre-Report): Short - Tier One\">(Pre-Report): Short - Tier One</option>\n              <option value=\"(Pre-Report): Long - Tier One\">(Pre-Report): Long - Tier One</option>\n              <option value=\"(Post-Report): Short - Success\">(Post-Report): Short - Success</option>\n              <option value=\"(Post-Report): Long - Success\">(Post-Report): Long - Success</option>\n              <option value=\"(Post-Report): Short - Misinterpreted\">(Post-Report): Short - Misinterpreted Evidence</option>\n              <option value=\"(Post-Report): Long - Misinterpreted\">(Post-Report): Long - Misinterpreted Evidence</option>\n              <option value=\"(Post-Report): Short - Adverse Reaction\">(Post-Report): Short - Adverse Reaction</option>\n              <option value=\"(Post-Report): Long - Adverse Reaction\">(Post-Report): Long - Adverse Reaction</option>\n            </select>\n          </label>\n        </div>\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <div className=\"transcript-rating-form__button\">\n            <Button type=\"submit\">\n                Update Transcript Rating\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewTranscriptRating;","import React, { useContext, useState } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './RatingForm.css';\n\nconst UpdateTranscriptRating = props => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [rating, setRating] = useState(props.rating);\n\n  const ratingChangeHandler = event => {\n    setRating(event.target.value);\n  };\n\n  const ratingSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/transcriptRatings/${props._id}`,\n        'PATCH', \n        JSON.stringify({\n          \"rating\": rating,\n          \"transcriptRatingId\": props._id,\n          \"creator\": auth.userId\n        }), {\n        Authorization: 'Bearer ' + auth.token,\n        'Content-Type': 'application/json',\n      });\n  } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"rating-form\" onSubmit={ratingSubmitHandler}>\n      {isLoading && <LoadingSpinner as Overlay />}\n      <div className=\"rating-container\">\n        <div className=\"transcript-ratings-side-by-side-container\">\n        <label className=\"transcript-rating__label\">\n          Transcript Rating:\n          <select value={rating} onChange={ratingChangeHandler}>\n            <option value=\"Unrated\">Unrated</option>\n            <option value=\"Empty\">Empty</option>\n            <option value=\"Weak\">Weak</option>\n            <option value=\"(Pre-Report): Short - Tier Two\">(Pre-Report): Short - Tier Two</option>\n            <option value=\"(Pre-Report): Long - Tier Two\">(Pre-Report): Long - Tier Two</option>\n            <option value=\"(Pre-Report): Short - Tier One\">(Pre-Report): Short - Tier One</option>\n            <option value=\"(Pre-Report): Long - Tier One\">(Pre-Report): Long - Tier One</option>\n            <option value=\"(Post-Report): Short - Success\">(Post-Report): Short - Success</option>\n            <option value=\"(Post-Report): Long - Success\">(Post-Report): Long - Success</option>\n            <option value=\"(Post-Report): Short - Misinterpreted\">(Post-Report): Short - Misinterpreted</option>\n            <option value=\"(Post-Report): Long - Misinterpreted\">(Post-Report): Long - Misinterpreted</option>\n            <option value=\"(Post-Report): Short - Adverse Reaction\">(Post-Report): Short - Adverse Reaction</option>\n            <option value=\"(Post-Report): Long - Adverse Reaction\">(Post-Report): Long - Adverse Reaction</option>\n          </select>\n        </label>\n        </div>\n        <div className=\"transcript-ratings-side-by-side-container\">\n          <div className=\"transcript-rating-form__button\">\n            <Button type=\"submit\">\n                Update Transcript Rating\n            </Button>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateTranscriptRating;","import React, { useState, useEffect, useContext} from 'react';\nimport { useParams } from 'react-router-dom'\n\nimport NewTranscriptRating from './NewTranscriptRating';\nimport UpdateTranscriptRating from './UpdateTranscriptRating';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport './RatingForm.css';\n\nconst TranscriptRatingForm = () => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  const [ loadedTranscriptRating, setLoadedTranscriptRating ] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  useEffect(() => {\n    const fetchTranscriptRating = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcriptRatings/${auth.username}/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscriptRating(responseData.transcriptRating);\n      } catch (err) {}\n    };\n    fetchTranscriptRating();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    {isLoading && (<div className=\"center\">\n      <LoadingSpinner />\n    </div>\n    )}\n    <header className=\"rating-header\">\n    {!isLoading && loadedTranscriptRating && !loadedTranscriptRating._id && (\n    <NewTranscriptRating />)}\n    {!isLoading && loadedTranscriptRating && loadedTranscriptRating._id && (\n    <UpdateTranscriptRating {...loadedTranscriptRating} />)}\n    </header>\n  </React.Fragment>\n  );\n}\n\nexport default TranscriptRatingForm;","import React, { useContext, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './TranscriptTitle.css';\nimport TranscriptRatingForm from '../../ratings/components/TranscriptRatingForm';\n\nconst TranscriptTitle = () => {\n  const auth = useContext(AuthContext);\n  const [ loadedTranscript, setLoadedTranscript] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  const transcriptId = useParams().transcriptId;\n  const pageName = () => {\n    const currentUrl = window.location.href;\n    if (currentUrl.includes('exchanges')) {\n      return 'Highly-Rated QA'\n    } else if (currentUrl.includes('opening-statements')) {\n      return 'Highly-Rated OS'\n    } else if (currentUrl.includes('full-transcript')) {\n      return 'Full Transcript'\n    } else if (currentUrl.includes('primary-evidence')) {\n      return 'Upcoming Trades'\n    } else if (currentUrl.includes('guidance-versus-consensus')) {\n      return 'Guidance vs. Consensus'\n    } else if (currentUrl.includes('past-events')) {\n      return 'Past Events'\n    } else if (currentUrl.includes('tendencies')) {\n      return 'Tendencies'\n    } else if (currentUrl.includes('sentiment')) {\n      return 'Sentiment'\n    } else if (currentUrl.includes('trade-submission')) {\n      return 'Trade Submission'\n    } else if (currentUrl.includes('reaction-evaluation')) {\n      return 'Reaction Evaluation'\n    }\n  }\n\n  useEffect(() => {\n    const fetchTranscript = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/transcripts/${transcriptId}`, 'GET', null, {\n            Authorization: 'Bearer ' + auth.token\n          });\n        setLoadedTranscript(responseData.transcript);\n      } catch (err) {}\n    };\n    fetchTranscript();\n  }, [sendRequest, auth.token, auth.username, transcriptId])\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (<div className=\"center\">\n        <LoadingSpinner />\n      </div>\n      )}\n      {!isLoading && loadedTranscript && (\n        <header className=\"transcript-title\">\n          <h2>{loadedTranscript.ticker.tickerText} {loadedTranscript.fiscalQuarter} {loadedTranscript.fiscalYear}: {pageName()}</h2>\n        </header>)}\n        <TranscriptRatingForm />\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptTitle;","import React from 'react';\n\nimport './TranscriptHeader.css';\n\nconst TranscriptHeader = props => {\n  return (\n    <header className=\"transcript-header\">\n      {props.children}\n    </header>\n  );\n};\n\nexport default TranscriptHeader","import React, { useContext } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './TranscriptNavLinks.css';\n\nconst TranscriptNavLinks = props => {\n  const auth = useContext(AuthContext);\n  const transcriptId = useParams().transcriptId;\n  return (\n    <ul className=\"transcript-nav-links\">\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/exchanges`} exact>QA</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/opening-statements`} exact>OS</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/full-transcript`} exact>Full Transcript</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/guidance-versus-consensus`} exact>Guidance vs. Consensus</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/past-events`}  exact>Past Events</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/tendencies`}  exact>Tendencies</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/sentiment`}  exact>Sentiment</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/trade-submission`}  exact>Trade Submission</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/users/${auth.username}/transcripts/${transcriptId}/reaction-evaluation`}  exact>Reaction Evaluation</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default TranscriptNavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './TranscriptDropdown.css';\n\nconst TranscriptDropdown = props => {\n  const content = (\n    <aside className=\"transcript-dropdown\">{props.children}</aside>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('dropdown-hook'));\n};\n\nexport default TranscriptDropdown;","import React, { useState } from 'react';\n\nimport TranscriptHeader from './TranscriptHeader';\nimport TranscriptNavLinks from './TranscriptNavLinks';\nimport TranscriptDropdown from './TranscriptDropdown';\nimport Backdrop from '../../shared/components/UIElements/Backdrop';\nimport './TranscriptNavigation.css';\n\nconst TranscriptNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  \n  const openDrawer = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawer = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawer} />}\n      {drawerIsOpen &&\n      <TranscriptDropdown>\n        <nav className=\"transcript-navigation__drawer-nav\">\n          <TranscriptNavLinks />\n        </nav>\n      </TranscriptDropdown>}\n      <TranscriptHeader>\n        <button className=\"transcript-navigation__menu-btn\" onClick={openDrawer}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <nav className=\"transcript-navigation__header-nav\">\n          <TranscriptNavLinks />\n        </nav>\n      </TranscriptHeader>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptNavigation;","import React from 'react';\n\nimport TranscriptTitle from './TranscriptTitle';\nimport TranscriptNavigation from './TranscriptNavigation';\nimport './TranscriptHome.css';\n\nconst TranscriptHome = () => {\n\n  return (\n    <React.Fragment>\n      <div className=\"transcript-home-title-container\">\n        <TranscriptTitle />\n        <TranscriptNavigation />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TranscriptHome;"],"sourceRoot":""}